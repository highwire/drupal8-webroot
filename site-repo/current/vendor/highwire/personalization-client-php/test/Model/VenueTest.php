<?php
/**
 * VenueTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  PersonalizationClient
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Personalization API
 *
 * Craig's <strong>best</strong> attempt at generated API documentation for web use.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: cjurney@highwire.org
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace PersonalizationClient;

/**
 * VenueTest Class Doc Comment
 *
 * @category    Class
 * @description Each venue has a collection of one or more options that may be used by the UI depending on the current state of the p13n feature, eg, when an alert is available for the user to activate, there might a option to create it with one or more user-selectable settings like frequency.
 * @package     PersonalizationClient
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class VenueTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test "Venue"
     */
    public function testVenue()
    {
    }

    /**
     * Test attribute "active"
     */
    public function testPropertyActive()
    {
    }

    /**
     * Test attribute "available"
     */
    public function testPropertyAvailable()
    {
    }

    /**
     * Test attribute "paused"
     */
    public function testPropertyPaused()
    {
    }

    /**
     * Test attribute "whenever"
     */
    public function testPropertyWhenever()
    {
    }
}
