<!-- freebird-journal -->
<policy xmlns="http://schema.highwire.org/DataExtract" xmlns:atom="http://www.w3.org/2005/Atom"
    xmlns:nlm="http://schema.highwire.org/NLM/Journal"
    xmlns:hwp="http://schema.highwire.org/Journal" xmlns:c="http://schema.highwire.org/Compound"
    xmlns:xhtml="http://www.w3.org/1999/xhtml"
    xmlns:collection="http://schema.highwire.org/Collection"
    xmlns:metadata="http://schema.highwire.org/Service/Metadata"
    xmlns:r="http://schema.highwire.org/Revision" xmlns:course="http://schema.highwire.org/Course"
    context="/atom:entry"
    name="freebird-journal"
    id-field="apath"
    corpus-field="jcode"
    type-field="atype-long">

    <!-- Variables -->
    <variable name="environment">
        if (contains(/atom:entry/@xml:base, "sass-alpha") or contains(/atom:entry/@xml:base, "sass-dev"))
        then "development"
        else "production"
    </variable>

    <variable name="apath">
      (atom:link[@rel='self']/@href)[1]
    </variable>

    <variable name="atype-raw">
        lower-case(atom:category[@scheme='http://schema.highwire.org/Publishing#role']/@term)
    </variable>

    <variable name="atype-long">
        replace(
          replace($atype-raw, "http://schema.highwire.org/", ""),
          "/",
          "-"
        )
    </variable>

    <field name="collection-id">
        nlm:collection-meta/nlm:collection-id/text()
    </field>

    <variable name="atype">
        tokenize($atype-long,'-')[last()]
    </variable>

    <variable name="issue-toc-href-sass">
        if ($atype = ('issue'))
        then atom:link[@c:role='http://schema.highwire.org/variant/table-of-contents' and @rel='alternate' and @type='application/xml'][1]/resolve-uri(@href,base-uri())
        else ()
    </variable>

    <variable name="issue-toc-href-service">
        if ($atype = ('issue'))
        then
          if ($environment = ('production'))
          then
            concat('http://toc-structure.highwire.org/api/internal/content/structure',$apath)
          else if ($environment = ('development'))
          then
            concat('http://toc-structure-alpha.highwire.org/api/internal/content/structure',$apath)
          else()
        else ()
    </variable>

    <variable name="article-version">
      if ($atype = ('article') or $atype = ('compilation'))
      then
        exists(atom:link[@rel='http://schema.highwire.org/Revision#previous'][@c:role='http://schema.highwire.org/Journal/Article'])
        or
        exists(atom:link[@rel='http://schema.highwire.org/Revision#next'][@c:role='http://schema.highwire.org/Journal/Article'])
      else false
    </variable>

    <variable name="article-collection-member-href">
        if ($atype = ('article') or $atype = ('compilation'))
        then
          if ($environment = ('production'))
          then
            concat('http://feeds.highwire.org/collection-member',$apath,'?X-HighWire-ErrorResponse2XML')
          else if ($environment = ('development'))
          then
            concat('http://feeds-alpha.highwire.org/collection-member',$apath,'?X-HighWire-ErrorResponse2XML')
          else()
        else ()
    </variable>

    <variable name="article-collections-entry">
        if ($atype = ('article') or $atype = ('compilation'))
        then
           if (doc-available($article-collection-member-href))
           then doc($article-collection-member-href)/atom:feed/atom:entry
           else ()
        else ()
    </variable>

    <variable name="adjunct-type">
        if (exists(atom:link[@c:role='http://schema.highwire.org/Adjunct'][@rel='http://schema.highwire.org/Compound#parent']))
        then 'file'
        else 'container'
    </variable>

    <variable name="adjunct-html-href">
        if ($atype = ('adjunct'))
        then atom:link[@rel='alternate'][@type='application/xhtml+xml']/resolve-uri(@href,base-uri())
        else ()
    </variable>

    <variable name="adjunct-html-doc">
        if ($atype = ('adjunct'))
        then
          if (doc-available($adjunct-html-href))
          then doc($adjunct-html-href)
          else()
        else()
    </variable>

    <variable name="book-id">
        if ($atype-long = ('book-fragment') or $atype-long = ('book-section'))
        then nlm:book-meta/nlm:book-id[@pub-id-type='hwp']/text()
        else()
    </variable>
    <variable name="jcode" include-if="not($atype-long=('bookgroup'))">
        (
        nlm:journal-meta/nlm:journal-id[@journal-id-type='hwp']/text(),
        nlm:related-object/@source-id,
        replace(tokenize((atom:link[@rel='self']/@href)[1],'/')[2], '.atom$','')
        )[1]
    </variable>

    <variable name="parent">
        atom:link[@href][@rel='http://schema.highwire.org/Compound#parent']/@href
    </variable>

    <!-- Common to all records -->

    <field name="apath">$apath</field>
    <field name="atype">$atype</field>
    <field name="atype-long">$atype-long</field>

    <!-- Compilation don't have pisa id's and AC was built to send the issue pisa in instead, crappy work around, but didn't have any other choice -->
    <field name="pisa" description="some description" label="some label">
        if ($atype = ('compilation'))
        then
            if (doc-available(resolve-uri($parent, base-uri())))
            then doc(resolve-uri($parent, base-uri()))//nlm:pub-id[@pub-id-type='other' and @hwp:sub-type='pisa'][1]/text()
            else ()
        else nlm:pub-id[@pub-id-type='other' and @hwp:sub-type='pisa'][1]/text()
    </field>
    <!-- Compilation don't have pisa id's and AC was built to send the issue pisa in instead, crappy work around, but didn't have any other choice -->
    <field name="pisa-master">
        if ($atype = ('compilation'))
        then
            if (doc-available(resolve-uri($parent, base-uri())))
            then doc(resolve-uri($parent, base-uri()))//(nlm:pub-id[@pub-id-type='other' and @hwp:sub-type='pisa-master'], nlm:pub-id[@pub-id-type='other' and @hwp:sub-type='pisa']  )[1]/text()
            else ()
        else (nlm:pub-id[@pub-id-type='other' and @hwp:sub-type='pisa-master'], nlm:pub-id[@pub-id-type='other' and @hwp:sub-type='pisa']  )[1]/text()
    </field>

    <field name="featured">
        lower-case(atom:category[@scheme='http://schema.highwire.org/Journal/Fragment#is-featured-figure']/@term)
    </field>

    <field name="jcode" include-if="not($atype-long=('bookgroup'))">
        (
          nlm:journal-meta/nlm:journal-id[@journal-id-type='hwp']/text(),
          nlm:related-object/@source-id,
          replace(tokenize((atom:link[@rel='self']/@href)[1],'/')[2], '.atom$','')
        )[1]
    </field>

    <field name="jcode" include-if="$atype-long=('bookgroup')">
        (
            nlm:book-meta/nlm:book-id[@pub-id-type='hwp']/text()
        )[1]
    </field>

    <field name="journal-meta" list="true" type="structure">
        <structure context="nlm:journal-meta">
            <field name="journal-ta">
                nlm:journal-id[@journal-id-type='nlm-ta']/text()
            </field>
            <field name="journal-title">
              nlm:journal-title/text()
            </field>
            <field name="abbrev-journal-title-publisher">
              nlm:abbrev-journal-title[@abbrev-type='publisher']/text()
            </field>
            <field name="abbrev-journal-title-pubmed">
              nlm:abbrev-journal-title[@abbrev-type='pubmed']/text()
            </field>
            <field name="issn-ppub">
              nlm:issn[@pub-type='ppub']/text()
            </field>
            <field name="issn-epub">
              nlm:issn[@pub-type='epub']/text()
            </field>
            <field name="publisher-name">
              nlm:publisher/nlm:publisher-name/text()
            </field>
        </structure>
    </field>

    <field name="title">atom:title[1]/node()</field>
    <field name="title-short">hwp:alt-title[@hwp:alt-title-type='short'][1]/node()</field>
    <field name="subtitle">atom:subtitle[1]/node()</field>

    <field name="slug">
        (
          nlm:pub-id[@hwp:sub-type='slug'][1]/text(),
          nlm:object-id[@hwp:sub-type='slug'][1]/text()
        )[1]
    </field>

    <field name="subtype" list="true">
        for $uri in atom:category[@scheme='http://schema.highwire.org/Publishing#subtype']/@term return lower-case(tokenize($uri,'#')[last()])
    </field>

    <field name="variant-data" list="true" type="structure">
        <structure context="atom:link[@rel='alternate'][@type!='application/atom+xml; type=feed']">
            <field name="path">@href</field>
            <field name="lang">@hreflang</field>
            <field name="variant">
                if (matches(@c:role, "http://schema.highwire.org/variant"))
                then replace(@c:role, "http://schema.highwire.org/variant/", "")
                else ()
            </field>
            <field name="type">@type</field>
        </structure>
    </field>

    <field name="children" list="true">
        atom:link[@href][@rel='http://schema.highwire.org/Compound#child']/@href
    </field>

    <field name="custom-meta" list="true" type="structure" include-if="//nlm:custom-meta" drupal-type="double_field">
        <structure context="//nlm:custom-meta">
            <field name="first">nlm:meta-name/node()</field>
            <field name="last">nlm:meta-value/node()</field>
        </structure>
    </field>

    <field name="related" list="true" type="structure">
        <structure context="atom:link[@rel='related' or @rel='http://schema.highwire.org/Revision#correction' or @rel='http://schema.highwire.org/Revision#retraction' or @rel='http://schema.highwire.org/Revision#subject' or @rel='http://schema.highwire.org/Edition#highlight']">
            <field name="apath">@href</field>
            <field name="type">replace(@rel, "http://schema.highwire.org/", "")</field>
            <field name="prop">hwp:property/@href</field>
            <field name="via">@c:via</field>
            <field name="title">
                if (exists(hwp:property))
                then doc(resolve-uri(hwp:property/@href,base-uri()))//atom:title/text()
                else xhtml:span/node()
            </field>
        </structure>
    </field>

    <field name="parent" include-if="not($atype = ('journal'))">
        atom:link[@href][@rel='http://schema.highwire.org/Compound#parent']/@href
    </field>

    <variable name="ancestry-uri">
        (atom:link[@rel='self']/resolve-uri(concat(@href, '?with-ancestors=yes'), base-uri(.)))[1]
    </variable>

    <variable name="book-parent">
        if ($atype-long = ('book-section', 'book-fragment'))
        then
        if (doc-available($ancestry-uri))
        then doc($ancestry-uri)/atom:entry//c:parent[
        atom:category[
        @scheme eq 'http://schema.highwire.org/Publishing#role'
        and @term eq 'http://schema.highwire.org/Book/Edition']]
        else ()
        else ()
    </variable>

    <field name="book-meta" include-if="$atype-long = ('book-section') or $atype-long = ('book-fragment')" list="true" type="structure">
        <structure context="$book-parent">
            <field name="apath">atom:link[@rel='self']/@href</field>
            <field name="title">atom:title/text()</field>
            <field name="subtitle">atom:subtitle/text()</field>
            <field name="eisbn">nlm:book-meta/nlm:isbn[@pub-type="epub"]/text()</field>
            <field name="isbn-cloth">nlm:book-meta/nlm:isbn[@pub-type="cloth"]/text()</field>
            <field name="isbn-paper">nlm:book-meta/nlm:isbn[@pub-type="paper"]/text()</field>
            <field name="publisher-name">nlm:book-meta/nlm:publisher/nlm:publisher-name/text()</field>
            <field name="tizra-url">atom:link[@rel="http://schema.highwire.org/Linking/External#Tizra"]/@href</field>
            <field name="tizra-preview">atom:link[@rel="http://schema.highwire.org/Linking/External#TizraPreview"]/@href</field>
        </structure>
    </field>
    <!-- Common to many records -->

    <field name="volume" include-if="exists(nlm:volume)">
        nlm:volume[1]/text()
    </field>
    <field name="issue">
       nlm:issue[1]/text()
    </field>
    <field name="issue-id">
        nlm:issue-id[@pub-id-type='display']/text()
    </field>

    <!-- to test for early release we need to check for two different variables which are both atom:category) -->
    <!-- Rather than checking its own vairable, just check to see if the suppress exists - PB - 11/05/2013 -->
    <field name="early-release" type="boolean">
        exists(//atom:category[@scheme='http://schema.highwire.org/Journal/Article#is-early-release' and @term='yes'])
        and
        not(exists(//atom:category[@scheme='http://schema.highwire.org/Journal/Article#early-release-feed' and @term='suppress']))
    </field>

    <!-- START ATOM SERVER DATES -->
    <field name="date-epreprint" type="structure" drupal-type="daterange">
        <structure context="nlm:pub-date[@pub-type='epreprint'][1]">
            <field name="value" elastic-type="date">@hwp:start</field>
            <field name="end-value" elastic-type="date">@hwp:end</field>
            <field name="season">nlm:season/text()</field>
        </structure>
    </field>
    <field name="date-epub" type="structure" drupal-type="daterange">
        <structure context="nlm:pub-date[@pub-type='epub'][1]">
            <field name="value" elastic-type="date">@hwp:start</field>
            <field name="end-value" elastic-type="date">@hwp:end</field>
            <field name="season">nlm:season/text()</field>
        </structure>
    </field>
    <field name="date-epub-version" type="structure" drupal-type="daterange">
        <structure context="nlm:pub-date[@pub-type='epub-version'][1]">
            <field name="value" elastic-type="date">@hwp:start</field>
            <field name="end-value" elastic-type="date">@hwp:end</field>
            <field name="season">nlm:season/text()</field>
        </structure>
    </field>
    <field name="date-epub-original" type="structure" drupal-type="daterange">
        <structure context="nlm:pub-date[@pub-type='epub-original'][1]">
            <field name="value" elastic-type="date">@hwp:start</field>
            <field name="end-value" elastic-type="date">@hwp:end</field>
            <field name="season">nlm:season/text()</field>
        </structure>
    </field>
    <field name="date-epub-ppub" type="structure" drupal-type="daterange">
        <structure context="nlm:pub-date[@pub-type='epub-ppub'][1]">
            <field name="value" elastic-type="date">@hwp:start</field>
            <field name="end-value" elastic-type="date">@hwp:end</field>
            <field name="season">nlm:season/text()</field>
        </structure>
    </field>
    <field name="date-ppub" type="structure" drupal-type="daterange">
        <structure context="nlm:pub-date[@pub-type='ppub']">
            <field name="value" elastic-type="date">@hwp:start</field>
            <field name="end-value" elastic-type="date">@hwp:end</field>
            <field name="season">nlm:season/text()</field>
        </structure>
    </field>
    <field name="date-atom-published" drupal-type="datetime" elastic-type="date">
        atom:published/text()
    </field>
    <field name="date-released" drupal-type="datetime" elastic-type="date">
        r:released/text()
    </field>
    <field name="date-history" type="structure" list="true" drupal-type="daterange">
        <structure context="nlm:history/nlm:date">
            <field name="type">@date-type</field>
            <field name="value" elastic-type="date">@hwp:start</field>
            <field name="end-value" elastic-type="date">@hwp:end</field>
        </structure>
    </field>
    <!-- END ATOM SERVER DATES -->

    <field name="fpage">nlm:fpage[1]/text()</field>
    <field name="lpage">nlm:lpage[1]/text()</field>

    <field name="physical-first-page" include-if="$atype-long = ('book-section')">
        nlm:custom-meta-group/nlm:custom-meta[@specific-use='physical-pages' and nlm:meta-name/text() = 'fpage']/nlm:meta-value/text()
    </field>

    <field name="physical-last-page" include-if="$atype-long = ('book-section')">
        nlm:custom-meta-group/nlm:custom-meta[@specific-use='physical-pages' and nlm:meta-name/text() = 'lpage']/nlm:meta-value/text()
    </field>

    <field name="elocation-id">nlm:elocation-id/text()</field>

    <field name="doi">nlm:pub-id[@pub-id-type='doi'][1]/text()</field>

    <field name="external-dois" list="true">
        (atom:category[@scheme='http://schema.highwire.org/Linking/External' and @term='doi'][1]/node()/text())
    </field>

    <!-- <field name="external-dois" list="true" type="structure" include-if="exists(atom:category[@scheme='http://schema.highwire.org/Linking/External' and @term='doi'])">
        <structure context="atom:category[@scheme='http://schema.highwire.org/Linking/External' and @term='doi']">
            <field name="doi">xhtml:span/node()</field>
        </structure>
    </field> -->

    <field name="pressrelease">
        (atom:link[@c:role='http://schema.highwire.org/variant/press-release'
        and @rel='alternate']/@href)[1]
    </field>

    <field name="era">
        (atom:category[@scheme='http://schema.highwire.org/Publication/Content#era']/@term)[1]
    </field>

    <field name="enclosures" list="true" type="structure" include-if="exists(atom:link[@rel='enclosure'])">
        <structure context="atom:link[@rel='enclosure']">
            <field name="path">@href</field>
            <field name="via">@c:via</field>
            <field name="mime-type">@type</field>
            <field name="title" include-if="exists(@c:via)">doc(resolve-uri(@c:via,base-uri()))//atom:title/text()</field>
        </structure>
    </field>

    <field name="adjuncts" include-if="$atype != ('adjunct')" list="true">
        atom:link[@c:role='http://schema.highwire.org/Adjunct']/@href
    </field>

    <field name="georef-id" include-if="$atype = ('article') or $atype = ('compilation') or $atype-long = ('book-edition') or $atype-long = ('book-section')">
        if (exists(atom:link/nlm:pub-id[@pub-id-type='georef'][1]/text()))
        then  atom:link/nlm:pub-id[@pub-id-type='georef'][1]/text()
        else if (exists(nlm:pub-id[@pub-id-type="georef-id"]/text()))
        then nlm:pub-id[@pub-id-type="georef-id"]/text()
        else ()
    </field>

    <field name="contributors-xml" list="true">
        (atom:author, atom:contributor)
    </field>

    <!-- Journals Only -->

    <field name="journal-publisher-id" include-if="$atype = ('journal')">
        nlm:pub-id[@pub-id-type='publisher-id']/node()
    </field>

    <field name="journal-publisher" include-if="$atype = ('journal')">
        atom:author/atom:name/node()
    </field>

    <field name="journal-abbrv-title" include-if="$atype = ('journal')">
        nlm:journal-meta/nlm:abbrev-journal-title/text()
    </field>

    <field name="journal-eissn" include-if="$atype = ('journal')">
        nlm:journal-meta/nlm:issn[@pub-type='epub']/node()
    </field>

    <field name="journal-pissn" include-if="$atype = ('journal')">
        nlm:journal-meta/nlm:issn[@pub-type='ppub']/node()
    </field>

    <field name="journal-current-issue" include-if="$atype = ('journal')">
        atom:link[@rel='http://schema.highwire.org/Edition#current']/@href
    </field>


    <field name="journal-issue-data" list="true" type="structure" include-if="$atype = ('journal')">
        <structure context="atom:link[@rel='http://schema.highwire.org/Edition#current' or @rel='http://schema.highwire.org/Edition#recent' or @rel='http://schema.highwire.org/Edition#open' or @rel='http://schema.highwire.org/Edition#closed']">
            <field name="apath">@href</field>
            <field name="type">replace(@rel, "http://schema.highwire.org/Edition#", "")</field>
            <field name="closed-date">
                if (exists(r:closed))
                then r:closed/text()
                else ()
            </field>
            <field name="volume">
                if (exists(nlm:volume))
                then nlm:volume/text()
                else ()
            </field>
            <field name="issue">
                if (exists(nlm:issue))
                then nlm:issue/text()
                else ()
            </field>
        </structure>
    </field>

    <!-- Issues Only -->
    <field name="issue-type" include-if="$atype = ('issue')">
        if (exists(atom:link[@c:role='http://schema.highwire.org/Journal/Volume'][@rel='http://schema.highwire.org/Compound#parent']))
        then 'print'
        else 'batch'
    </field>

    <field name="issue-cover-image" include-if="$atype = ('issue')">
        atom:link[@c:role='http://schema.highwire.org/variant/cover' and @rel='alternate' and @type != 'application/pdf']/@href[1]
    </field>

    <!-- If the issue is open, use the toc structure serivce to generate the toc.
      (See JCORE-1187)  -->
    <field name="issue-toc" include-if="$atype = ('issue')">
        if (exists(//atom:category[@term='http://schema.highwire.org/Edition#open']))
        then
          if (doc-available($issue-toc-href-service))
          then doc($issue-toc-href-service)
          else()
        else if (doc-available($issue-toc-href-sass))
        then doc($issue-toc-href-sass)
        else if(doc-available($issue-toc-href-service))
        then doc($issue-toc-href-service)
        else()
    </field>

    <field name="issue-editors-xml" include-if="$atype = ('issue')" list="true">
        atom:contributor
    </field>

    <field name="issue-title" include-if="$atype = ('issue')">nlm:issue-title[1]/node()</field>

    <field name="issue-supplemental" include-if="$atype = ('issue')" type="boolean">
        exists(//atom:category[@scheme='http://schema.highwire.org/Publication/Content#is-supplemental' and @term='yes'])
    </field>

    <field name="issue-is-open" type="boolean" include-if="$atype= ('issue')">
        exists(//atom:category[@term='http://schema.highwire.org/Edition#open'])
    </field>

    <field name="issue-page-range" include-if="$atype= ('issue')" list="true">
        (atom:category[@term='pagerange']/node()/text())
    </field>

    <!-- Articles Only -->
    <field name="article-authors-xml" include-if="$atype = ('article') or $atype = ('compilation')" list="true">
        (atom:author, atom:contributor)
    </field>

    <field name="article-on-behalf" include-if="$atype = ('article') or $atype = ('compilation')" list="true">
        (nlm:on-behalf-of)
    </field>


    <field name="article-type" include-if="$atype = ('article') or $atype = ('compilation')">@nlm:article-type</field>
    <field name="article-pmid" include-if="$atype = ('article') or $atype = ('compilation')">nlm:article-id[@pub-id-type="pmid"]/text()</field>
    <field name="article-open-access" type="boolean" include-if="$atype = ('article') or $atype = ('compilation')">exists(nlm:permissions/nlm:license[@license-type="open-access"])</field>
    <field name="article-permissions" include-if="$atype = ('article') or $atype = ('compilation')">nlm:permissions</field>

    <field name="article-categories" list="true" type="structure">
        <structure context="nlm:article-categories//nlm:subject" include-if="exists(text())">
            <field name="name">*|text()</field>
            <field name="type" list="true">ancestor::*/@subj-group-type</field>
            <field name="content-type">@content-type</field>
        </structure>
    </field>

    <field name="article-keywords" list="true" type="structure" include-if="$atype = ('article')  or $atype = ('compilation')">
        <structure context="nlm:kwd-group/nlm:kwd">
            <field name="name">*|text()</field>
            <field name="type">../@kwd-group-type</field>
        </structure>
    </field>

    <field name="article-series-title" include-if="$atype = ('article')  or $atype = ('compilation')" list="true">
        (nlm:article-categories/nlm:series-title/text())
    </field>

    <field name="article-corrections" include-if="$atype = ('article') or $atype = ('compilation')" list="true">
        atom:link
        [@rel='http://schema.highwire.org/Revision#correction' or @rel='http://schema.highwire.org/Revision#retraction']
        [@c:role='http://schema.highwire.org/Journal/Article']/@href
    </field>
    <field name="article-correction-subjects" include-if="$atype = ('article') or $atype = ('compilation')" list="true">
        atom:link[@rel='http://schema.highwire.org/Revision#subject'][
        @c:role='http://schema.highwire.org/Journal/Article']/@href
    </field>

    <field name="article-version" include-if="$atype = ('article') or $atype = ('compilation')" type="boolean">$article-version</field>
    <field name="article-version-current" include-if="$atype = ('article') or $atype = ('compilation')" type="boolean">
        not(exists(atom:link[@rel='http://schema.highwire.org/Revision#current'][@c:role='http://schema.highwire.org/Journal/Article']))
    </field>
    <field name="article-version-head" include-if="$article-version">
        atom:link[@rel='http://schema.highwire.org/Revision#current'][@c:role='http://schema.highwire.org/Journal/Article']/@href
    </field>

    <field name="collections" list="true" type="structure" include-if="$article-collections-entry">
        <structure context="$article-collections-entry/atom:category[@scheme='http://schema.highwire.org/Collection#Hierarchy']">
            <field name="path">@term</field>
            <field name="id" type="integer">xs:decimal(collection:id/text())</field>
            <field name="relevance" type="float">xs:decimal(collection:relevance/text())</field>
            <field name="assigned">collection:assigned/text()</field>
        </structure>
    </field>

    <field name="funding-awards-groups" list="true" include-if="$atype = ('article')">
        nlm:funding-group/nlm:award-group
    </field>

    <field name="page-count" include-if="$atype = ('article') or $atype = ('compilation')">
        (nlm:counts/nlm:page-count/@count)
    </field>

    <!-- Fragments Only -->

    <!-- Fragment-type: We select the first Publishing#subtype as the connonical type for this fragment. This is usually `table` or `figure` -->
    <field name="fragment-type" include-if="$atype-long = ('journal-fragment') or $atype-long = ('book-fragment')">
        tokenize(lower-case(atom:category[@scheme='http://schema.highwire.org/Publishing#subtype'][1]/@term),'#')[last()]
    </field>
    <field name="fragment-summary" include-if="$atype-long = ('journal-fragment') or $atype-long = ('book-fragment')">
        atom:summary/node()
    </field>
    <field name="fragment-image-thumbnail" include-if="$atype-long = ('journal-fragment') or $atype-long = ('book-fragment')">
        (atom:link[@c:role='http://schema.highwire.org/variant/thumbnail']/@href)[1]
    </field>
    <field name="fragment-image-small" include-if="$atype-long = ('journal-fragment') or $atype-long = ('book-fragment')">
        (atom:link[@c:role='http://schema.highwire.org/variant/small']/@href)[1]
    </field>
    <field name="fragment-image-medium" include-if="$atype-long = ('journal-fragment') or $atype-long = ('book-fragment')">
        (atom:link[@c:role='http://schema.highwire.org/variant/medium']/@href)[1]
    </field>
    <field name="fragment-image-large" include-if="$atype-long = ('journal-fragment') or $atype-long = ('book-fragment')">
        (atom:link[@c:role='http://schema.highwire.org/variant/large']/@href)[1]
    </field>
    <field name="fragment-image-poster" include-if="$atype-long = ('journal-fragment') or $atype-long = ('book-fragment')">
        (atom:link[@rel='related'][@c:role='http://schema.highwire.org/variant/poster']/@href)[1]
    </field>
    <field name="fragment-keywords" list="true" type="structure" include-if="$atype-long = ('journal-fragment') or $atype-long = ('book-fragment')">
        <structure context="nlm:kwd-group/nlm:kwd">
            <field name="name">*|text()</field>
            <field name="type">../@kwd-group-type</field>
        </structure>
    </field>


    <!-- Adjuncts Only -->

    <field name="adjunct-type" include-if="$atype = ('adjunct')">$adjunct-type</field>

    <field name="adjunct-subjects" include-if="$atype = ('adjunct')" list="true">
        atom:link[
          @c:role='http://schema.highwire.org/Journal/Article' or
          @c:role='http://schema.highwire.org/Journal/Issue' or
          @c:role='http://schema.highwire.org/Journal/Fragment'
        ]
        [@type='application/atom+xml; type=entry']/@href
    </field>

    <field name="adjunct-files" include-if="$atype = ('adjunct') and ($adjunct-type = ('container'))" list="true" type="structure">
      <structure context="atom:link[@c:role='http://schema.highwire.org/Adjunct']">
        <variable name="file-href">@href</variable>
        <field name="path">$file-href</field>
        <field name="title">$adjunct-html-doc//xhtml:a[contains($file-href, @href)]/text()</field>
        <field name="description">$adjunct-html-doc//xhtml:a[contains($file-href, @href)]/following-sibling::text()</field>
        <field name="adjunct">@c:via</field>
        <field name="pisa">doc(resolve-uri(@c:via,base-uri()))//nlm:pub-id[@pub-id-type='other' and @hwp:sub-type='pisa'][1]/text()</field>
        <field name="mime-type">@type</field>
      </structure>
    </field>

    <field name="adjunct-enclosures" include-if="$atype = ('adjunct')" list="true">
        atom:link[@c:role='http://schema.highwire.org/Adjunct'][@rel='enclosure']/@c:via
    </field>

    <field name="atom-collections" list="true" type="structure" include-if="atom:category[contains(@scheme, '#publisher')]">
        <structure context="atom:category[starts-with(@scheme, 'http://atom-collections.highwire.org/')]">
            <field name="scheme">@scheme</field>
            <field name="term">@term</field>
            <field name="atomid">atom:id</field>
            <field name="label" include-if="@label">@label</field>
        </structure>
    </field>


    <!-- Comments Only -->

    <field name="comment-authors" include-if="$atype = ('comment')" list="true">
        (atom:author/atom:name/text(), atom:contributor/atom:name/text())
    </field>

    <field name="comment-authors-xml" include-if="$atype = ('comment')" list="true">
        (atom:author, atom:contributor)
    </field>

    <field name="comment-subject" list="true" include-if="$atype = ('comment')">
        atom:link[@rel='related'][@c:role='http://schema.highwire.org/Journal/Issue' or @c:role='http://schema.highwire.org/Journal/Article']/@href
    </field>

    <field name="comment-flag" include-if="$atype = ('comment')">
        atom:category[@scheme='http://schema.highwire.org/Journal/Comment#flag']/@term
    </field>

    <field name="comment-html" include-if="$atype = ('comment')">
        atom:link[@rel='http://schema.highwire.org/Publishing#edit-variant'][@c:role='http://schema.highwire.org/Publishing/default'][@type='application/xhtml+xml']/@href
    </field>


    <!-- Course/CME Only -->
    <field name="course-id" include-if="$atype = ('course')">
        nlm:pub-id[@pub-id-type='course-id'][1]/text()
    </field>

    <field name="program-code" include-if="$atype = ('course')">
        nlm:pub-id[@pub-id-type='program-code'][1]/text()

    </field>

    <field name="date-experation" type="structure" include-if="$atype = ('course')">
        <structure context="nlm:pub-date[@pub-type='expiration'][1]">
            <field name="start">@hwp:start</field>
            <field name="end">@hwp:end</field>
            <field name="season">nlm:season/text()</field>
        </structure>
    </field>

    <field name="course-credits-count" include-if="$atype = ('course')">
        atom:category[@scheme='http://schema.highwire.org/Course/Credit#metadata']/course:credits/@count
    </field>

    <field name="course-accreditation" include-if="$atype = ('course')">
        atom:category[@scheme='http://schema.highwire.org/Course/Credit#metadata']/course:credits/text()
    </field>

    <field name="course-link" include-if="$atype = ('course')">
        atom:link[
            @rel='http://schema.highwire.org/Linking/External#Rievent' or
            @rel='http://schema.highwire.org/Linking/External#CME'
        ]/@href
    </field>

    <!-- Books and Book Editions -->
    <field name="isbn" include-if="$atype-long = ('book') or $atype-long = ('book-edition')">
        nlm:pub-id[@pub-id-type='isbn']/text()
    </field>
    <field name="isbn-paper" include-if="$atype-long = ('book') or $atype-long = ('book-edition')">
        nlm:book-meta/nlm:isbn[@pub-type='paper']/text()
    </field>
    <field name="isbn-cloth" include-if="$atype-long = ('book') or $atype-long = ('book-edition')">
        nlm:book-meta/nlm:isbn[@pub-type='cloth']/text()
    </field>
    <field name="eisbn" include-if="$atype-long = ('book') or $atype-long = ('book-edition')">
        nlm:pub-id[@pub-id-type='eisbn'][1]/text()
    </field>
    <field name="book-title-group" include-if="$atype-long = ('book') or $atype-long = ('book-edition')">
        nlm:book-meta/nlm:book-title-group
    </field>
    <field name="book-eissn" include-if="$atype-long = ('book') or $atype-long = ('book-edition')">
        nlm:pub-id[@pub-id-type='issn-epub']/text()
    </field>

    <field name="book-pissn" include-if="$atype-long = ('book') or $atype-long = ('book-edition')">
        nlm:pub-id[@pub-id-type='issn-ppub']/text()
    </field>

    <field name="page-count" include-if="$atype-long = ('book') or $atype-long = ('book-edition')">
        nlm:book-meta/nlm:counts/nlm:page-count/@count
    </field>

    <!-- Book Editions -->

    <field name="book-edition-cover-images" list="true" include-if="$atype-long = ('book-edition')">
        atom:link[@c:role='http://schema.highwire.org/variant/cover-source' and @rel='alternate']/@href
    </field>

    <!-- book edition -->
    <!-- related works as parsed from the recommendations service. currently this only comes -->
    <!-- in XML form, so we're going to handle it as a list here. -->
    <!--
    <variable name="book-edition-related-works" include-if="$atype-long = ('book-edition')">
        doc(concat('http://recommendations-alpha.highwire.org/like/content',$apath,'?scope=books',$apath))
    </variable>

    <field name="related-works" list="true" include-if="$atype-long = ('book-edition')">
        $book-edition-related-works//atom:entry/atom:link/@href
    </field>
    -->
    <!-- end book edition related works -->

    <field name="book-permissions" include-if="$atype-long = ('book-edition')">
        nlm:book-meta/nlm:permissions
    </field>

    <field name="book-volume" include-if="$atype-long = ('book-edition')">
        nlm:book-meta/nlm:volume/text()
    </field>

    <field name="book-edition" include-if="$atype-long = ('book-edition')">
        nlm:book-meta/nlm:edition/text()
    </field>

    <field name="book-edition" include-if="$atype-long = ('book-edition')">
        nlm:book-meta/nlm:edition/text()
    </field>

    <field name="tizra-href" include-if="$atype-long = ('book-edition')">
        atom:link[@rel='http://schema.highwire.org/Linking/External#Tizra']/@href[1]
    </field>

    <field name="tizra-preview" include-if="$atype-long = ('book-edition')">
        atom:link[@rel='http://schema.highwire.org/Linking/External#TizraPreview']/@href[1]
    </field>

    <field name="book-alt-title" include-if="$atype-long = ('book-edition')">
        nlm:book-meta/nlm:book-title-group/nlm:alt-title/text()
    </field>

    <field name="book-publisher" include-if="$atype-long = ('book-edition')" list="true">
        nlm:book-meta/nlm:publisher/nlm:publisher-name/text()
    </field>

    <!-- Book Sections -->
    <field name="book-part-categories" list="true" type="structure">
        <structure context="nlm:book-part-categories//nlm:subject" include-if="exists(text())">
            <field name="name">text()</field>
            <field name="type" list="true">ancestor::*/@subj-group-type</field>
            <field name="content-type">@content-type</field>
        </structure>
    </field>

    <field name="book-section-part-type" include-if="$atype-long = ('book-section')">
        atom:category[@scheme="http://schema.highwire.org/Book/Section#part-type"]/@term
    </field>

    <!-- GeoRef record -->
    <field name="publisher-name" include-if="$atype = ('georef')">
        nlm:publisher/nlm:publisher-name/text()
    </field>

    <field name="georef-bibliographic-level" include-if="$atype = ('georef')">
        atom:category[@scheme='http://schema.highwire.org/Data/Georef#bibliographic-level']/@term
    </field>

    <field name="georef-document-type" include-if="$atype = ('georef')" list="true">
        atom:category[@scheme='http://schema.highwire.org/Data/Georef#document-type']/@term
    </field>

    <field name="georef-document-in-process" include-if="$atype = ('georef')" type="boolean">
        exists(atom:category[@scheme='http://schema.highwire.org/Data/Georef#in-process'])
    </field>

    <field name="georef-ip" include-if="$atype = ('georef')">
        nlm:pub-id[@pub-id-type='georef-ip']/text()
    </field>

    <field name="georef-id" include-if="$atype = ('georef')">
      nlm:pub-id[@pub-id-type="georef"]/text()
    </field>

    <!-- Sigtrans DBCS -->

    <!-- To fetch Resource Type for Pathway, Node, Component and Relation -->
    <variable name="resource-type-long" include-if="$atype = ('resource')">
        lower-case(atom:category[@scheme='urn:org.highwire:external:resource']/@term)
    </variable>

    <variable name="resource-type" include-if="$atype = ('resource')">
        tokenize($resource-type-long,'-')[last()]
    </variable>
    <!-- To fetch Resource Type for Pathway, Node, Component and Relation -->

    <field name="resource-type-long">$resource-type-long</field>

    <field name="resource-type">$resource-type</field>

    <!-- Resource Only -->
    <field name="resource-summary" include-if="$atype = ('resource')">atom:summary/node()</field>

    <field name="resource-authors" include-if="$atype = ('resource')" list="true">
        (atom:author/atom:name/text(), atom:contributor/atom:name/text())
    </field>

    <field name="resource-authors-xml" include-if="$atype = ('resource')" list="true">
        (atom:author, atom:contributor)
    </field>

    <field name="resource-title-alt-abbr" include-if="($atype = ('resource'))">
        hwp:alt-title[@hwp:alt-title-type='abbrev']/text()
    </field>

    <!-- Node Only -->
    <field name="resource-component-id" include-if="$resource-type = ('node')">
        nlm:pub-id[@pub-id-type='other' and @hwp:sub-type='component-id'][1]/text()
    </field>

    <field name="resource-node-connection-map-type"  include-if="$resource-type = ('node')">
        lower-case(atom:category[@scheme='urn:org.highwire:connections-map-node:type']/@term)
    </field>

    <!-- Node and Relation Only -->
    <field name="resource-path-id" include-if="($resource-type = ('node')) or ($resource-type = ('relation'))">
        nlm:pub-id[@pub-id-type='other' and @hwp:sub-type='path-id'][1]/text()
    </field>

    <!-- Relation Only -->
    <field name="resource-relation-connection-map-type"  include-if="$resource-type = ('relation')">
        lower-case(atom:category[@scheme='urn:org.highwire:connections-map-relation:type']/@term)
    </field>

    <field name="resource-relation-object-source-id" include-if="$resource-type = ('relation')">
        nlm:object-id[@pub-id-type='other' and @hwp:sub-type='source-id'][1]/text()
    </field>

    <field name="resource-relation-object-target-id" include-if="$resource-type = ('relation')">
        nlm:object-id[@pub-id-type='other' and @hwp:sub-type='target-id'][1]/text()
    </field>

    <!-- Component Only -->
    <field name="resource-component-connections-map-type"  include-if="$resource-type = ('component')">
        lower-case(atom:category[@scheme='urn:org.highwire:connections-map-component:type']/@term)
    </field>

    <field name="resource-component-connections-map-collection-type"  include-if="($resource-type = ('component'))">
        lower-case(atom:category[@scheme='urn:org.highwire:connections-map-component:collection:type']/@term)
    </field>

    <field name="resource-component-connections-map-collection-model-organism"  include-if="($resource-type = ('component'))">
        lower-case(atom:category[@scheme='urn:org.highwire:connections-map-component:collection:model-organism']/@term)
    </field>

    <!-- Pathway Only -->
    <field name="resource-pathway-connection-map-type"  include-if="$resource-type = ('pathway')">
        lower-case(atom:category[@scheme='urn:org.highwire:connections-map-pathway:type']/@term)
    </field>

    <field name="resource-pathway-connections-map-collection-model-organism"  include-if="($resource-type = ('pathway'))">
        lower-case(atom:category[@scheme='urn:org.highwire:connections-map-pathway:collection:model-organism']/@term)
    </field>

    <!-- News Story Only -->
    <field name="news-story-type"  include-if="$atype-long = ('news-story')">
        lower-case(atom:category[@scheme='http://schema.highwire.org/News/Story#story-type']/@term)
    </field>
    <field name="news-story-publisher-slug"  include-if="$atype-long = ('news-story')">
        //nlm:pub-id[@pub-id-type="publisher"]/text()
    </field>
    <field name="news-story-summary"  include-if="$atype-long = ('news-story')">
        atom:summary/node()
    </field>

</policy>
