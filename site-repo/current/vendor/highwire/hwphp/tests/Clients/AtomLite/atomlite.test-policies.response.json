[
{
"policyId": "ac-resource",
"name": "ac-resource",
"policyType": null,
"url": "http://staticfs.highwire.org/extract/policies/ac-resource/definition.xml",
"format": "json/xml",
"source": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<dx:policy context=\"/atom:entry\" \n  xmlns:dx=\"http://schema.highwire.org/DataExtract\"\n  xmlns:atom=\"http://www.w3.org/2005/Atom\"\n  xmlns:c=\"http://schema.highwire.org/Compound\"\n  xmlns:nlm=\"http://schema.highwire.org/NLM/Journal\" \n  xmlns:hwp=\"http://schema.highwire.org/Journal\"\n  >\n  \n  <!--xi:include xmlns:xi=\"http://www.w3.org/2001/XInclude\"\n    href=\"src/test/resources/include/atom-defines.xml\" /-->\n  \n  <dx:variable name=\"type.html\">'application/xhtml+xml'</dx:variable>\n  <dx:variable name=\"type.pdf\">'application/pdf'</dx:variable>\n  <dx:variable name=\"role.abstract\">'http://schema.highwire.org/variant/abstract'</dx:variable>\n  <dx:variable name=\"role.fulltext\">(\n    'http://schema.highwire.org/variant/body', \n    'http://schema.highwire.org/variant/full-text'\n    )</dx:variable>\n\n  <dx:variable name=\"self\">atom:link[@rel = 'self']/@href</dx:variable>\n  <dx:variable name=\"qualified-id\">nlm:pub-id[@pub-id-type eq 'other'][@hwp:sub-type eq 'pisa'][1]/text()</dx:variable>\n  <dx:variable name=\"qualifier\">substring-before($qualified-id, ';')</dx:variable>\n  <dx:variable name=\"id\">substring-after($qualified-id, ';')</dx:variable>\n  <dx:variable name=\"corpus\">(nlm:book-meta/nlm:book-id[@pub-id-type eq 'hwp'], nlm:journal-meta/nlm:journal-id[@journal-id-type eq 'hwp'])[1]/text()\n  </dx:variable>\n  <dx:variable name=\"datastream\">$corpus</dx:variable>\n  <dx:variable name=\"private\">false()</dx:variable>\n  <dx:variable name=\"role\" as=\"xs:string\">atom:category[@scheme='http://schema.highwire.org/Publishing#role'][1]/@term</dx:variable>\n  <dx:variable name=\"type-id\">if ($role = (\n      'http://schema.highwire.org/Book/Edition', \n      'http://schema.highwire.org/Journal/Issue'\n      )) \n    then '2'\n    else if ($role = (\n      'http://schema.highwire.org/Book/Section', \n      'http://schema.highwire.org/Journal/Article'\n      ))\n        then '1'\n        else '-1'\n  </dx:variable>\n  <dx:variable name=\"parent-uri\">(\n    atom:link[@rel='http://schema.highwire.org/Compound#parent']/@href,\n    c:parent/atom:link[@rel='self']/@href\n    )[1]\n  </dx:variable>\n\n  <dx:variable name=\"date\">if (not(empty(nlm:pub-date[@pub-type eq 'epub'])))\n    then nlm:pub-date[@pub-type eq 'epub'][1]/@hwp:start \n    else\n      if (not(empty(nlm:pub-date[@pub-type eq 'epub-ppub']))) \n      then nlm:pub-date[@pub-type eq 'epub-ppub'][1]/@hwp:start \n      else\n        if (not(empty(nlm:pub-date[@pub-type eq 'ppub']))) \n        then nlm:pub-date[@pub-type eq 'ppub'][1]/@hwp:start \n        else atom:published[1]/text()\n  </dx:variable>\n\n  <dx:variable name=\"pub-date\">if (string-length($date) eq 4) \n    then concat($date, '-01-01T00:00:00')\n    else\n      if (string-length($date) eq 7)\n      then concat($date, '-01T00:00:00')\n      else\n        if (string-length($date) eq 10)\n        then concat($date, 'T00:00:00')\n        else $date\n  </dx:variable>\n\n  <dx:variable name=\"master-id\">nlm:pub-id[@pub-id-type eq 'other'][@hwp:sub-type eq 'pisa-master'][1]/text()</dx:variable>\n  <dx:variable name=\"doi\">nlm:pub-id[@pub-id-type eq 'doi'][1]/text()</dx:variable>\n  <dx:variable name=\"sections\">nlm:article-categories/nlm:subj-group[@subj-group-type eq 'heading']//nlm:subject[@content-type eq \"original\"]/text()</dx:variable>\n  <dx:variable name=\"views\">atom:link[@rel eq 'alternate']</dx:variable>\n  <dx:variable name=\"abstract\">$views[@c:role = $role.abstract][1]/@href</dx:variable>\n  <dx:variable name=\"full\">$views[@c:role = $role.fulltext and @type = $type.html][1]/@href</dx:variable>\n  <dx:variable name=\"reprint\">$views[@c:role = $role.fulltext and @type = $type.pdf][1]/@href</dx:variable>\n  <dx:variable name=\"access-indicator\">if (atom:category[\n            @scheme='http://schema.highwire.org/Journal/Article#open-access'][@term='yes']) \n    then 'oa'\n    else ()\n  </dx:variable>\n  <dx:variable name=\"title\">normalize-space(atom:title[1])</dx:variable>\n\n  <dx:field name=\"resource\" type=\"structure\">\n    <dx:structure>\n      <dx:field name=\"role\">$role</dx:field>\n      <dx:field name=\"title\" include-if=\"string-length($title) != 0\">$title</dx:field>\n      <dx:field name=\"uri\">$self</dx:field>\n      <dx:field name=\"datastream\" include-if=\"string-length($datastream) != 0\">$datastream</dx:field>\n      <dx:field name=\"private\">$private</dx:field>\n      <dx:field name=\"type-id\">$type-id</dx:field>\n      <dx:field name=\"parent-uri\" include-if=\"string-length($parent-uri) != 0\">$parent-uri</dx:field>\n      <dx:field name=\"id\" include-if=\"string-length($id) != 0\">$id</dx:field>\n      <dx:field name=\"qualifier\" include-if=\"string-length($qualifier) != 0\">$qualifier</dx:field>\n      <dx:field name=\"qualified-id\" include-if=\"string-length($qualified-id) != 0\">$qualified-id</dx:field>\n      <dx:field name=\"master-id\" include-if=\"string-length($master-id) != 0\">$master-id</dx:field>\n      <dx:field name=\"doi\" include-if=\"string-length($doi) != 0\">$doi</dx:field>\n      <dx:field name=\"pub-date\" include-if=\"string-length($pub-date) != 0\">$pub-date</dx:field>\n      <dx:field name=\"abstract\" include-if=\"string-length($abstract) != 0\">$abstract</dx:field>\n      <dx:field name=\"full\" include-if=\"string-length($full) != 0\">$full</dx:field>\n      <dx:field name=\"reprint\" include-if=\"string-length($reprint) != 0\">$reprint</dx:field>\n      <dx:field name=\"access-indicator\" include-if=\"string-length($access-indicator) != 0\">$access-indicator</dx:field>\n      <dx:field name=\"sections\" include-if=\"not(empty($sections))\" list=\"true\" >$sections</dx:field>\n\n      <!-- e-Commerce related extras even if duplicative -->\n      <dx:field name=\"ec-corpus\">$corpus</dx:field>\n      <dx:field name=\"ec-parent\" include-if=\"string-length($parent-uri) != 0\">$parent-uri</dx:field>\n      <dx:field name=\"ec-role\" include-if=\"string-length($role) != 0\">$role</dx:field>\n      \n      <dx:variable name=\"parts\">(\n         atom:category[@scheme='http://schema.highwire.org/Book/Section#part-type']/@term, \n         @nlm:article-type\n         )</dx:variable>\n      <dx:field name=\"ec-type\" include-if=\"not(empty($parts))\" list=\"true\">string-join($parts, ', ')</dx:field>\n      <dx:field name=\"ec-access\" include-if=\"string-length($access-indicator) != 0\" list=\"true\">$access-indicator</dx:field>\n      \n    </dx:structure>\n  </dx:field>\n</dx:policy>\n",
"signature": "9e36860dedb183a545f87461dbfcdedf",
"mimeTypes": [
"application/vnd.hw.ac.resource+json",
"application/vnd.hw.ac.resource+xml"
],
"newMimeType": null,
"corpusList": [],
"newCorpus": null,
"updatedDate": 1496235936784,
"enable": false,
"ignorePaths": null,
"inclusionPaths": null,
"new": false,
"id": "54035030-c053-11e5-bacb-43a133c6adb4"
},
{
"policyId": "drupal-journal",
"name": "drupal-journal",
"policyType": "siena",
"url": "http://staticfs.highwire.org/a4d-extract/policies/drupal-43/definition.xml",
"format": "json/xml",
"source": "<!-- drupal-43 -->\r\n<policy xmlns=\"http://schema.highwire.org/DataExtract\"\r\n    xmlns:atom=\"http://www.w3.org/2005/Atom\"\r\n    xmlns:nlm=\"http://schema.highwire.org/NLM/Journal\"\r\n    xmlns:hwp=\"http://schema.highwire.org/Journal\"\r\n    xmlns:c=\"http://schema.highwire.org/Compound\"\r\n    xmlns:xhtml=\"http://www.w3.org/1999/xhtml\"\r\n    xmlns:collection=\"http://schema.highwire.org/Collection\"\r\n    xmlns:metadata=\"http://schema.highwire.org/Service/Metadata\"\r\n    xmlns:r=\"http://schema.highwire.org/Revision\" context=\"/atom:entry\"\r\n    xmlns:course=\"http://schema.highwire.org/Course\"\r\n    \r\n    name=\"drupal-43\" \r\n    id-field=\"apath\" \r\n    corpus-field=\"jcode\"\r\n    type-field=\"atype-long\">\r\n\r\n    <!-- Variables -->\r\n    <variable name=\"environment\">\r\n        if (contains(/atom:entry/@xml:base, \"sass-alpha\") or contains(/atom:entry/@xml:base, \"sass-dev\"))\r\n        then \"development\"\r\n        else \"production\"\r\n    </variable>\r\n\r\n    <variable name=\"apath\">\r\n      (atom:link[@rel='self']/@href)[1]\r\n    </variable>\r\n\r\n    <variable name=\"atype-raw\">\r\n        lower-case(atom:category[@scheme='http://schema.highwire.org/Publishing#role']/@term)\r\n    </variable>\r\n\r\n    <variable name=\"atype-long\">\r\n        replace(\r\n          replace($atype-raw, \"http://schema.highwire.org/\", \"\"),\r\n          \"/\",\r\n          \"-\"\r\n        )\r\n    </variable>\r\n\r\n    <field name=\"collection-id\">\r\n        nlm:collection-meta/nlm:collection-id/text()\r\n    </field>\r\n\r\n    <variable name=\"atype\">\r\n        tokenize($atype-long,'-')[last()]\r\n    </variable>\r\n\r\n    <variable name=\"issue-toc-href-sass\">\r\n        if ($atype = ('issue'))\r\n        then atom:link[@c:role='http://schema.highwire.org/variant/table-of-contents' and @rel='alternate' and @type='application/xml'][1]/resolve-uri(@href,base-uri())\r\n        else ()\r\n    </variable>\r\n\r\n    <variable name=\"issue-toc-href-service\">\r\n        if ($atype = ('issue'))\r\n        then\r\n          if ($environment = ('production'))\r\n          then\r\n            concat('http://toc-structure.highwire.org/api/internal/content/structure',$apath)\r\n          else if ($environment = ('development'))\r\n          then\r\n            concat('http://toc-structure-alpha.highwire.org/api/internal/content/structure',$apath)\r\n          else()\r\n        else ()\r\n    </variable>\r\n\r\n    <variable name=\"article-version\">\r\n      if ($atype = ('article') or $atype = ('compilation'))\r\n      then\r\n        exists(atom:link[@rel='http://schema.highwire.org/Revision#previous'][@c:role='http://schema.highwire.org/Journal/Article'])\r\n        or\r\n        exists(atom:link[@rel='http://schema.highwire.org/Revision#next'][@c:role='http://schema.highwire.org/Journal/Article'])\r\n      else false\r\n    </variable>\r\n\r\n    <variable name=\"article-collection-member-href\">\r\n        if ($atype = ('article') or $atype = ('compilation'))\r\n        then\r\n          if ($environment = ('production'))\r\n          then\r\n            concat('http://feeds.highwire.org/collection-member',$apath,'?X-HighWire-ErrorResponse2XML')\r\n          else if ($environment = ('development'))\r\n          then\r\n            concat('http://feeds-alpha.highwire.org/collection-member',$apath,'?X-HighWire-ErrorResponse2XML')\r\n          else()\r\n        else ()\r\n    </variable>\r\n\r\n    <variable name=\"article-collections-entry\">\r\n        if ($atype = ('article') or $atype = ('compilation'))\r\n        then\r\n           if (doc-available($article-collection-member-href))\r\n           then doc($article-collection-member-href)/atom:feed/atom:entry\r\n           else ()\r\n        else ()\r\n    </variable>\r\n\r\n    <variable name=\"adjunct-type\">\r\n        if (exists(atom:link[@c:role='http://schema.highwire.org/Adjunct'][@rel='http://schema.highwire.org/Compound#parent']))\r\n        then 'file'\r\n        else 'container'\r\n    </variable>\r\n\r\n    <variable name=\"adjunct-html-href\">\r\n        if ($atype = ('adjunct'))\r\n        then atom:link[@rel='alternate'][@type='application/xhtml+xml'][@c:role='http://schema.highwire.org/Publishing/default']/resolve-uri(@href,base-uri())\r\n        else ()\r\n    </variable>\r\n\r\n    <variable name=\"adjunct-html-doc\">\r\n        if ($atype = ('adjunct'))\r\n        then\r\n          if (doc-available($adjunct-html-href))\r\n          then doc($adjunct-html-href)\r\n          else()\r\n        else()\r\n    </variable>\r\n\r\n    <variable name=\"book-id\">\r\n        if ($atype-long = ('book-fragment') or $atype-long = ('book-section'))\r\n        then nlm:book-meta/nlm:book-id[@pub-id-type='hwp']/text()\r\n        else()\r\n    </variable>\r\n    <variable name=\"jcode\" include-if=\"not($atype-long=('bookgroup'))\">\r\n        (\r\n        nlm:journal-meta/nlm:journal-id[@journal-id-type='hwp']/text(),\r\n        nlm:related-object/@source-id,\r\n        replace(tokenize((atom:link[@rel='self']/@href)[1],'/')[2], '.atom$','')\r\n        )[1]\r\n    </variable>\r\n\r\n    <variable name=\"parent\">\r\n        atom:link[@href][@rel='http://schema.highwire.org/Compound#parent']/@href\r\n    </variable>\r\n\r\n    <!-- Common to all records -->\r\n\r\n    <field name=\"apath\">$apath</field>\r\n    <field name=\"atype\">$atype</field>\r\n    <field name=\"atype-long\">$atype-long</field>\r\n    <field name=\"atom-id\">atom:id[1]/text()</field>\r\n\r\n    <!-- Compilation don't have pisa id's and AC was built to send the issue pisa in instead, crappy work around, but didn't have any other choice -->\r\n    <field name=\"pisa\">\r\n        if ($atype = ('compilation'))\r\n        then\r\n            if (doc-available(resolve-uri($parent, base-uri())))\r\n            then doc(resolve-uri($parent, base-uri()))//nlm:pub-id[@pub-id-type='other' and @hwp:sub-type='pisa'][1]/text()\r\n            else ()\r\n        else nlm:pub-id[@pub-id-type='other' and @hwp:sub-type='pisa'][1]/text()\r\n    </field>\r\n    <!-- Compilation don't have pisa id's and AC was built to send the issue pisa in instead, crappy work around, but didn't have any other choice -->\r\n    <field name=\"pisa-master\">\r\n        if ($atype = ('compilation'))\r\n        then\r\n            if (doc-available(resolve-uri($parent, base-uri())))\r\n            then doc(resolve-uri($parent, base-uri()))//(nlm:pub-id[@pub-id-type='other' and @hwp:sub-type='pisa-master'], nlm:pub-id[@pub-id-type='other' and @hwp:sub-type='pisa']  )[1]/text()\r\n            else ()\r\n        else (nlm:pub-id[@pub-id-type='other' and @hwp:sub-type='pisa-master'], nlm:pub-id[@pub-id-type='other' and @hwp:sub-type='pisa']  )[1]/text()\r\n    </field>\r\n\r\n    <field name=\"featured\">\r\n        lower-case(atom:category[@scheme='http://schema.highwire.org/Journal/Fragment#is-featured-figure']/@term)\r\n    </field>\r\n\r\n    <field name=\"jcode\" include-if=\"not($atype-long=('bookgroup'))\">\r\n        (\r\n          nlm:journal-meta/nlm:journal-id[@journal-id-type='hwp']/text(),\r\n          nlm:related-object/@source-id,\r\n          replace(tokenize((atom:link[@rel='self']/@href)[1],'/')[2], '.atom$','')\r\n        )[1]\r\n    </field>\r\n\r\n    <field name=\"jcode\" include-if=\"$atype-long=('bookgroup')\">\r\n        (\r\n            nlm:book-meta/nlm:book-id[@pub-id-type='hwp']/text()\r\n        )[1]\r\n    </field>\r\n\r\n    <field name=\"journal-meta\" list=\"true\" type=\"structure\">\r\n        <structure context=\"nlm:journal-meta\">\r\n            <field name=\"journal-ta\">\r\n                nlm:journal-id[@journal-id-type='nlm-ta']/text()\r\n            </field>\r\n            <field name=\"journal-title\">\r\n              nlm:journal-title/text()\r\n            </field>\r\n            <field name=\"abbrev-journal-title-publisher\">\r\n              nlm:abbrev-journal-title[@abbrev-type='publisher']/text()\r\n            </field>\r\n            <field name=\"abbrev-journal-title-pubmed\">\r\n              nlm:abbrev-journal-title[@abbrev-type='pubmed']/text()\r\n            </field>\r\n            <field name=\"issn-ppub\">\r\n              nlm:issn[@pub-type='ppub']/text()\r\n            </field>\r\n            <field name=\"issn-epub\">\r\n              nlm:issn[@pub-type='epub']/text()\r\n            </field>\r\n            <field name=\"publisher-name\">\r\n              nlm:publisher/nlm:publisher-name/text()\r\n            </field>\r\n        </structure>\r\n    </field>\r\n\r\n    <field name=\"title\">atom:title[1]/node()</field>\r\n    <field name=\"title-short\">hwp:alt-title[@hwp:alt-title-type='short'][1]/node()</field>\r\n    <field name=\"subtitle\">atom:subtitle[1]/node()</field>\r\n\r\n    <field name=\"slug\">\r\n        (\r\n          nlm:pub-id[@hwp:sub-type='slug'][1]/text(),\r\n          nlm:object-id[@hwp:sub-type='slug'][1]/text()\r\n        )[1]\r\n    </field>\r\n\r\n    <field name=\"subtype\" list=\"true\">\r\n        for $uri in atom:category[@scheme='http://schema.highwire.org/Publishing#subtype']/@term return lower-case(tokenize($uri,'#')[last()])\r\n    </field>\r\n\r\n    <field name=\"variant-data\" list=\"true\" type=\"structure\">\r\n        <structure context=\"atom:link[@rel='alternate'][@type!='application/atom+xml; type=feed']\">\r\n            <field name=\"path\">@href</field>\r\n            <field name=\"lang\">@hreflang</field>\r\n            <field name=\"variant\">\r\n                if (matches(@c:role, \"http://schema.highwire.org/variant\"))\r\n                then replace(@c:role, \"http://schema.highwire.org/variant/\", \"\")\r\n                else ()\r\n            </field>\r\n            <field name=\"type\">@type</field>\r\n        </structure>\r\n    </field>\r\n\r\n    <field name=\"children\" list=\"true\">\r\n        atom:link[@href][@rel='http://schema.highwire.org/Compound#child']/@href\r\n    </field>\r\n\r\n    <field name=\"custom-meta\" list=\"true\" type=\"structure\" include-if=\"//nlm:custom-meta\">\r\n        <structure context=\"//nlm:custom-meta\">\r\n            <field name=\"name\">nlm:meta-name/node()</field>\r\n            <field name=\"value\">nlm:meta-value/node()</field>\r\n        </structure>\r\n    </field>\r\n\r\n    <field name=\"related\" list=\"true\" type=\"structure\">\r\n        <structure context=\"atom:link[@rel='related' or @rel='http://schema.highwire.org/Revision#correction' or @rel='http://schema.highwire.org/Revision#retraction' or @rel='http://schema.highwire.org/Revision#subject' or @rel='http://schema.highwire.org/Edition#highlight'][@c:role!='http://schema.highwire.org/ExternalLink']\">\r\n            <field name=\"apath\">@href</field>\r\n            <field name=\"type\">replace(@rel, \"http://schema.highwire.org/\", \"\")</field>\r\n            <field name=\"prop\">hwp:property/@href</field>\r\n            <field name=\"via\">@c:via</field>\r\n            <field name=\"title\">\r\n                if (exists(hwp:property)) \r\n                then doc(resolve-uri(hwp:property/@href,base-uri()))//atom:title/text() \r\n                else if (exists(doc(resolve-uri(@href,base-uri()))//atom:title[@type='xhtml'])) \r\n                then doc(resolve-uri(@href,base-uri()))//atom:title[@type='xhtml']/xhtml:div/node() \r\n                else doc(resolve-uri(@href,base-uri()))//atom:title/text()\r\n            </field>\r\n        </structure>\r\n    </field>\r\n\r\n    <field name=\"external-links\" list=\"true\" type=\"structure\">\r\n        <structure context=\"atom:link[@c:role='http://schema.highwire.org/ExternalLink']/node()[starts-with(@rel, 'http://schema.highwire.org/Linking/External')]\">\r\n            <field name=\"url\">@href</field>\r\n            <field name=\"title\">text()</field>\r\n            <field name=\"type\">@rel</field>\r\n        </structure>\r\n    </field>\r\n\r\n    <field name=\"parent\" include-if=\"not($atype = ('journal'))\">\r\n        atom:link[@href][@rel='http://schema.highwire.org/Compound#parent']/@href\r\n    </field>\r\n\r\n    <variable name=\"ancestry-uri\">\r\n        (atom:link[@rel='self']/resolve-uri(concat(@href, '?with-ancestors=yes'), base-uri(.)))[1]\r\n    </variable>\r\n\r\n    <variable name=\"book-parent\">\r\n        if ($atype-long = ('book-section', 'book-fragment'))\r\n        then\r\n        if (doc-available($ancestry-uri))\r\n        then doc($ancestry-uri)/atom:entry//c:parent[\r\n        atom:category[\r\n        @scheme eq 'http://schema.highwire.org/Publishing#role'\r\n        and @term eq 'http://schema.highwire.org/Book/Edition']]\r\n        else ()\r\n        else ()\r\n    </variable>\r\n\r\n    <field name=\"book-meta\" include-if=\"$atype-long = ('book-section') or $atype-long = ('book-fragment')\" list=\"true\" type=\"structure\">\r\n        <structure context=\"$book-parent\">\r\n            <field name=\"apath\">atom:link[@rel='self']/@href</field>\r\n            <field name=\"title\">atom:title/text()</field>\r\n            <field name=\"subtitle\">atom:subtitle/text()</field>\r\n            <field name=\"eisbn\">nlm:book-meta/nlm:isbn[@pub-type=\"epub\"]/text()</field>\r\n            <field name=\"isbn-cloth\">nlm:book-meta/nlm:isbn[@pub-type=\"cloth\"]/text()</field>\r\n            <field name=\"isbn-paper\">nlm:book-meta/nlm:isbn[@pub-type=\"paper\"]/text()</field>\r\n            <field name=\"publisher-name\">nlm:book-meta/nlm:publisher/nlm:publisher-name/text()</field>\r\n            <field name=\"tizra-url\">atom:link[@rel=\"http://schema.highwire.org/Linking/External#Tizra\"]/@href</field>\r\n            <field name=\"tizra-preview\">atom:link[@rel=\"http://schema.highwire.org/Linking/External#TizraPreview\"]/@href</field>\r\n        </structure>\r\n    </field>\r\n    <!-- Common to many records -->\r\n\r\n    <field name=\"volume\" include-if=\"exists(nlm:volume)\">\r\n        nlm:volume[1]/text()\r\n    </field>\r\n    <field name=\"issue\">\r\n       nlm:issue[1]/text()\r\n    </field>\r\n    <field name=\"issue-id\">\r\n        nlm:issue-id[@pub-id-type='display']/text()\r\n    </field>\r\n\r\n    <!-- to test for early release we need to check for two different variables which are both atom:category) -->\r\n    <!-- Rather than checking its own vairable, just check to see if the suppress exists - PB - 11/05/2013 -->\r\n    <field name=\"early-release\" type=\"boolean\">\r\n        exists(//atom:category[@scheme='http://schema.highwire.org/Journal/Article#is-early-release' and @term='yes'])\r\n        and\r\n        not(exists(//atom:category[@scheme='http://schema.highwire.org/Journal/Article#early-release-feed' and @term='suppress']))\r\n    </field>\r\n\r\n    <!-- START ATOM SERVER DATES -->\r\n    <field name=\"date-epreprint\" type=\"structure\">\r\n        <structure context=\"(nlm:pub-date[@pub-type='epreprint'],nlm:book-meta/nlm:pub-date[@pub-type='epreprint'])[1]\">\r\n            <field name=\"start\" data-type=\"date\">@hwp:start</field>\r\n            <field name=\"end\" data-type=\"date\">@hwp:end</field>\r\n            <field name=\"season\">nlm:season/text()</field>\r\n        </structure>\r\n    </field>\r\n    <field name=\"date-epub\" type=\"structure\">\r\n        <structure context=\"(nlm:pub-date[@pub-type='epub'],nlm:book-meta/nlm:pub-date[@pub-type='epub'])[1]\">\r\n            <field name=\"start\" data-type=\"date\">@hwp:start</field>\r\n            <field name=\"end\" data-type=\"date\">@hwp:end</field>\r\n            <field name=\"season\">nlm:season/text()</field>\r\n        </structure>\r\n    </field>    \r\n    <field name=\"date-epub-version\" type=\"structure\">\r\n        <structure context=\"(nlm:pub-date[@pub-type='epub-version'],nlm:book-meta/nlm:pub-date[@pub-type='epub-version'])[1]\">\r\n            <field name=\"start\" data-type=\"date\">@hwp:start</field>\r\n            <field name=\"end\" data-type=\"date\">@hwp:end</field>\r\n            <field name=\"season\">nlm:season/text()</field>\r\n        </structure>\r\n    </field>\r\n    <field name=\"date-epub-original\" type=\"structure\">\r\n        <structure context=\"(nlm:pub-date[@pub-type='epub-original'],nlm:book-meta/nlm:pub-date[@pub-type='epub-original'])[1]\">\r\n            <field name=\"start\" data-type=\"date\">@hwp:start</field>\r\n            <field name=\"end\" data-type=\"date\">@hwp:end</field>\r\n            <field name=\"season\">nlm:season/text()</field>\r\n        </structure>\r\n    </field>\r\n    <field name=\"date-epub-ppub\" type=\"structure\">\r\n        <structure context=\"(nlm:pub-date[@pub-type='epub-ppub'],nlm:book-meta/nlm:pub-date[@pub-type='epub-ppub'])[1]\">\r\n            <field name=\"start\" data-type=\"date\">@hwp:start</field>\r\n            <field name=\"end\" data-type=\"date\">@hwp:end</field>\r\n            <field name=\"season\">nlm:season/text()</field>\r\n        </structure>\r\n    </field>\r\n    <field name=\"date-ppub\" type=\"structure\">\r\n        <structure context=\"(nlm:pub-date[@pub-type='ppub'],nlm:book-meta/nlm:pub-date[@pub-type='ppub'])[1]\">\r\n            <field name=\"start\" data-type=\"date\">@hwp:start</field>\r\n            <field name=\"end\" data-type=\"date\">@hwp:end</field>\r\n            <field name=\"season\">nlm:season/text()</field>\r\n        </structure>\r\n    </field>\r\n    <field name=\"date-atom-published\" type=\"structure\">\r\n        <structure context=\"atom:published\">\r\n            <field name=\"start\" data-type=\"date\">text()</field>\r\n        </structure>\r\n    </field>\r\n    <field name=\"date-released\" type=\"structure\">\r\n        <structure context=\"r:released\">\r\n            <field name=\"start\" data-type=\"date\">text()</field>\r\n        </structure>\r\n    </field>\r\n    <field name=\"date-history\" type=\"structure\" list=\"true\">\r\n        <structure context=\"nlm:history/nlm:date\">\r\n            <field name=\"type\">@date-type</field>\r\n            <field name=\"start\" data-type=\"date\">@hwp:start</field>\r\n            <field name=\"end\" data-type=\"date\">@hwp:end</field>\r\n        </structure>\r\n    </field>\r\n    <!-- END ATOM SERVER DATES -->\r\n\r\n    <field name=\"fpage\">nlm:fpage[1]/text()</field>\r\n    <field name=\"lpage\">nlm:lpage[1]/text()</field>\r\n\r\n    <field name=\"physical-first-page\" include-if=\"$atype-long = ('book-section')\">\r\n        nlm:custom-meta-group/nlm:custom-meta[@specific-use='physical-pages' and nlm:meta-name/text() = 'fpage']/nlm:meta-value/text()\r\n    </field>\r\n\r\n    <field name=\"physical-last-page\" include-if=\"$atype-long = ('book-section')\">\r\n        nlm:custom-meta-group/nlm:custom-meta[@specific-use='physical-pages' and nlm:meta-name/text() = 'lpage']/nlm:meta-value/text()\r\n    </field>\r\n\r\n    <field name=\"elocation-id\">nlm:elocation-id/text()</field>\r\n\r\n    <field name=\"doi\">nlm:pub-id[@pub-id-type='doi'][1]/text()</field>\r\n\r\n    <field name=\"external-dois\" list=\"true\">\r\n        (atom:category[@scheme='http://schema.highwire.org/Linking/External' and @term='doi'][1]/node()/text())\r\n    </field>\r\n\r\n    <!-- <field name=\"external-dois\" list=\"true\" type=\"structure\" include-if=\"exists(atom:category[@scheme='http://schema.highwire.org/Linking/External' and @term='doi'])\">\r\n        <structure context=\"atom:category[@scheme='http://schema.highwire.org/Linking/External' and @term='doi']\">\r\n            <field name=\"doi\">xhtml:span/node()</field>\r\n        </structure>\r\n    </field> -->\r\n\r\n    <field name=\"pressrelease\">\r\n        (atom:link[@c:role='http://schema.highwire.org/variant/press-release'\r\n        and @rel='alternate']/@href)[1]\r\n    </field>\r\n\r\n    <field name=\"era\">\r\n        (atom:category[@scheme='http://schema.highwire.org/Publication/Content#era']/@term)[1]\r\n    </field>\r\n\r\n    <field name=\"enclosures\" list=\"true\" type=\"structure\" include-if=\"exists(atom:link[@rel='enclosure'])\">\r\n        <structure context=\"atom:link[@rel='enclosure']\">\r\n            <field name=\"path\">@href</field>\r\n            <field name=\"via\">@c:via</field>\r\n            <field name=\"mime-type\">@type</field>\r\n            <field name=\"title\" include-if=\"exists(@c:via)\">doc(resolve-uri(@c:via,base-uri()))//atom:title/text()</field>\r\n        </structure>\r\n    </field>\r\n\r\n    <field name=\"adjuncts\" include-if=\"$atype != ('adjunct')\" list=\"true\">\r\n        atom:link[@c:role='http://schema.highwire.org/Adjunct']/@href\r\n    </field>\r\n\r\n    <field name=\"georef-id\" include-if=\"$atype = ('article') or $atype = ('compilation') or $atype-long = ('book-edition') or $atype-long = ('book-section')\">\r\n        if (exists(atom:link/nlm:pub-id[@pub-id-type='georef'][1]/text()))\r\n        then  (atom:link/nlm:pub-id[@pub-id-type='georef'])[1]/text()\r\n        else if (exists(nlm:pub-id[@pub-id-type=\"georef-id\"]/text()))\r\n        then nlm:pub-id[@pub-id-type=\"georef-id\"]/text()\r\n        else ()\r\n    </field>\r\n\r\n    <field name=\"contributors-xml\" list=\"true\">\r\n        (atom:author, atom:contributor)\r\n    </field>\r\n\r\n    <!-- Journals Only -->\r\n\r\n    <field name=\"journal-publisher-id\" include-if=\"$atype = ('journal')\">\r\n        nlm:pub-id[@pub-id-type='publisher-id']/node()\r\n    </field>\r\n\r\n    <field name=\"journal-publisher\" include-if=\"$atype = ('journal')\">\r\n        atom:author/atom:name/node()\r\n    </field>\r\n\r\n    <field name=\"journal-abbrv-title\" include-if=\"$atype = ('journal')\">\r\n        nlm:journal-meta/nlm:abbrev-journal-title/text()\r\n    </field>\r\n\r\n    <field name=\"journal-eissn\" include-if=\"$atype = ('journal')\">\r\n        nlm:journal-meta/nlm:issn[@pub-type='epub']/node()\r\n    </field>\r\n\r\n    <field name=\"journal-pissn\" include-if=\"$atype = ('journal')\">\r\n        nlm:journal-meta/nlm:issn[@pub-type='ppub']/node()\r\n    </field>\r\n\r\n    <field name=\"journal-current-issue\" include-if=\"$atype = ('journal')\">\r\n        atom:link[@rel='http://schema.highwire.org/Edition#current']/@href\r\n    </field>\r\n\r\n\r\n    <field name=\"journal-issue-data\" list=\"true\" type=\"structure\" include-if=\"$atype = ('journal')\">\r\n        <structure context=\"atom:link[@rel='http://schema.highwire.org/Edition#current' or @rel='http://schema.highwire.org/Edition#recent' or @rel='http://schema.highwire.org/Edition#open' or @rel='http://schema.highwire.org/Edition#closed']\">\r\n            <field name=\"apath\">@href</field>\r\n            <field name=\"type\">replace(@rel, \"http://schema.highwire.org/Edition#\", \"\")</field>\r\n            <field name=\"closed-date\">\r\n                if (exists(r:closed))\r\n                then r:closed/text()\r\n                else ()\r\n            </field>\r\n            <field name=\"volume\">\r\n                if (exists(nlm:volume))\r\n                then nlm:volume/text()\r\n                else ()\r\n            </field>\r\n            <field name=\"issue\">\r\n                if (exists(nlm:issue))\r\n                then nlm:issue/text()\r\n                else ()\r\n            </field>\r\n        </structure>\r\n    </field>\r\n\r\n    <!-- Issues Only -->\r\n    <field name=\"issue-type\" include-if=\"$atype = ('issue')\">\r\n        if (exists(atom:link[@c:role='http://schema.highwire.org/Journal/Volume'][@rel='http://schema.highwire.org/Compound#parent']))\r\n        then 'print'\r\n        else 'batch'\r\n    </field>\r\n\r\n    <field name=\"issue-cover-image\" include-if=\"$atype = ('issue')\">\r\n        atom:link[@c:role='http://schema.highwire.org/variant/cover' and @rel='alternate' and @type != 'application/pdf']/@href[1]\r\n    </field>\r\n\r\n    <!-- If the issue is open, use the toc structure serivce to generate the toc.\r\n      (See JCORE-1187)  -->\r\n    <field name=\"issue-toc\" include-if=\"$atype = ('issue')\">\r\n        if (exists(//atom:category[@term='http://schema.highwire.org/Edition#open']))\r\n        then\r\n          if (doc-available($issue-toc-href-service))\r\n          then doc($issue-toc-href-service)\r\n          else()\r\n        else if (doc-available($issue-toc-href-sass))\r\n        then doc($issue-toc-href-sass)\r\n        else if(doc-available($issue-toc-href-service))\r\n        then doc($issue-toc-href-service)\r\n        else()\r\n    </field>\r\n\r\n    <field name=\"issue-editors-xml\" include-if=\"$atype = ('issue')\" list=\"true\">\r\n        atom:contributor\r\n    </field>\r\n\r\n    <field name=\"issue-title\" include-if=\"$atype = ('issue')\">nlm:issue-title[1]/node()</field>\r\n\r\n    <field name=\"issue-supplemental\" include-if=\"$atype = ('issue')\" type=\"boolean\">\r\n        exists(//atom:category[@scheme='http://schema.highwire.org/Publication/Content#is-supplemental' and @term='yes'])\r\n    </field>\r\n\r\n    <field name=\"issue-is-open\" type=\"boolean\" include-if=\"$atype= ('issue')\">\r\n        exists(//atom:category[@term='http://schema.highwire.org/Edition#open'])\r\n    </field>\r\n\r\n    <field name=\"issue-page-range\" include-if=\"$atype= ('issue')\">\r\n        (atom:category[@term='pagerange']/node()/text())[1]\r\n    </field>\r\n\r\n    <field name=\"issue-editors-html\" include-if=\"$atype= ('issue')\" list=\"true\">\r\n        (atom:category[@scheme='http://schema.highwire.org/Publication/Content#external' and @term='editors']/node())\r\n    </field>\r\n\r\n    <!-- Articles Only -->\r\n    <field name=\"article-authors-xml\" include-if=\"$atype = ('article') or $atype = ('compilation')\" list=\"true\">\r\n        (atom:author, atom:contributor)\r\n    </field>\r\n\r\n    <field name=\"article-on-behalf\" include-if=\"$atype = ('article') or $atype = ('compilation')\" list=\"true\">\r\n        (nlm:on-behalf-of)\r\n    </field>\r\n\r\n\r\n    <field name=\"article-type\" include-if=\"$atype = ('article') or $atype = ('compilation')\">@nlm:article-type</field>\r\n    <field name=\"article-pmid\" include-if=\"$atype = ('article') or $atype = ('compilation')\">nlm:article-id[@pub-id-type=\"pmid\"]/text()</field>\r\n    <field name=\"article-open-access\" type=\"boolean\" include-if=\"$atype = ('article') or $atype = ('compilation')\">exists(nlm:permissions/nlm:license[@license-type=\"open-access\"])</field>\r\n    <field name=\"article-permissions\" include-if=\"$atype = ('article') or $atype = ('compilation')\">nlm:permissions</field>\r\n\r\n    <field name=\"article-categories\" list=\"true\" type=\"structure\">\r\n        <structure context=\"nlm:article-categories//nlm:subject\" include-if=\"exists(text())\">\r\n            <field name=\"name\">*|text()</field>\r\n            <field name=\"type\" list=\"true\">ancestor::*/@subj-group-type</field>\r\n            <field name=\"content-type\">@content-type</field>\r\n        </structure>\r\n    </field>\r\n\r\n    <field name=\"article-keywords\" list=\"true\" type=\"structure\" include-if=\"$atype = ('article')  or $atype = ('compilation')\">\r\n        <structure context=\"nlm:kwd-group/nlm:kwd\">\r\n            <field name=\"name\">*|text()</field>\r\n            <field name=\"type\">../@kwd-group-type</field>\r\n        </structure>\r\n    </field>\r\n\r\n    <field name=\"article-series-title\" include-if=\"$atype = ('article')  or $atype = ('compilation')\" list=\"true\">\r\n        (nlm:article-categories/nlm:series-title/text())\r\n    </field>\r\n\r\n    <field name=\"article-corrections\" include-if=\"$atype = ('article') or $atype = ('compilation')\" list=\"true\">\r\n        atom:link\r\n        [@rel='http://schema.highwire.org/Revision#correction' or @rel='http://schema.highwire.org/Revision#retraction']\r\n        [@c:role='http://schema.highwire.org/Journal/Article']/@href\r\n    </field>\r\n    <field name=\"article-correction-subjects\" include-if=\"$atype = ('article') or $atype = ('compilation')\" list=\"true\">\r\n        atom:link[@rel='http://schema.highwire.org/Revision#subject'][\r\n        @c:role='http://schema.highwire.org/Journal/Article']/@href\r\n    </field>\r\n\r\n    <field name=\"article-version\" include-if=\"$atype = ('article') or $atype = ('compilation')\" type=\"boolean\">$article-version</field>\r\n    <field name=\"article-version-current\" include-if=\"$atype = ('article') or $atype = ('compilation')\" type=\"boolean\">\r\n        not(exists(atom:link[@rel=('http://schema.highwire.org/Revision#current', 'http://schema.highwire.org/Revision#next')][@c:role='http://schema.highwire.org/Journal/Article']))    </field>\r\n    <field name=\"article-version-head\" include-if=\"$article-version\">\r\n        atom:link[@rel='http://schema.highwire.org/Revision#current'][@c:role='http://schema.highwire.org/Journal/Article']/@href\r\n    </field>\r\n\r\n    <field name=\"collections\" list=\"true\" type=\"structure\" include-if=\"$article-collections-entry\">\r\n        <structure context=\"$article-collections-entry/atom:category[@scheme='http://schema.highwire.org/Collection#Hierarchy']\">\r\n            <field name=\"path\">@term</field>\r\n            <field name=\"id\" type=\"integer\">xs:decimal(collection:id/text())</field>\r\n            <field name=\"relevance\" type=\"float\">xs:decimal(collection:relevance/text())</field>\r\n            <field name=\"assigned\">collection:assigned/text()</field>\r\n        </structure>\r\n    </field>\r\n\r\n    <field name=\"funding-awards-groups\" list=\"true\" include-if=\"$atype = ('article')\">\r\n        nlm:funding-group/nlm:award-group\r\n    </field>\r\n\r\n    <field name=\"funding-statement\" list=\"true\" include-if=\"$atype = ('article')\">\r\n        nlm:funding-group/nlm:funding-statement\r\n    </field>\r\n\r\n    <field name=\"page-count\" include-if=\"$atype = ('article') or $atype = ('compilation')\">\r\n        (nlm:counts/nlm:page-count/@count)\r\n    </field>\r\n\r\n    <!-- Fragments Only -->\r\n\r\n    <!-- Fragment-type: We select the first Publishing#subtype as the connonical type for this fragment. This is usually `table` or `figure` -->\r\n    <field name=\"fragment-type\" include-if=\"$atype-long = ('journal-fragment') or $atype-long = ('book-fragment')\">\r\n        tokenize(lower-case(atom:category[@scheme='http://schema.highwire.org/Publishing#subtype'][1]/@term),'#')[last()]\r\n    </field>\r\n    <field name=\"fragment-summary\" include-if=\"$atype-long = ('journal-fragment') or $atype-long = ('book-fragment')\">\r\n        atom:summary/node()\r\n    </field>\r\n    <field name=\"fragment-image-thumbnail\" include-if=\"$atype-long = ('journal-fragment') or $atype-long = ('book-fragment')\">\r\n        (atom:link[@c:role='http://schema.highwire.org/variant/thumbnail']/@href)[1]\r\n    </field>\r\n    <field name=\"fragment-image-small\" include-if=\"$atype-long = ('journal-fragment') or $atype-long = ('book-fragment')\">\r\n        (atom:link[@c:role='http://schema.highwire.org/variant/small']/@href)[1]\r\n    </field>\r\n    <field name=\"fragment-image-medium\" include-if=\"$atype-long = ('journal-fragment') or $atype-long = ('book-fragment')\">\r\n        (atom:link[@c:role='http://schema.highwire.org/variant/medium']/@href)[1]\r\n    </field>\r\n    <field name=\"fragment-image-large\" include-if=\"$atype-long = ('journal-fragment') or $atype-long = ('book-fragment')\">\r\n        (atom:link[@c:role='http://schema.highwire.org/variant/large']/@href)[1]\r\n    </field>\r\n    <field name=\"fragment-image-poster\" include-if=\"$atype-long = ('journal-fragment') or $atype-long = ('book-fragment')\">\r\n        (atom:link[@rel='related'][@c:role='http://schema.highwire.org/variant/poster']/@href)[1]\r\n    </field>\r\n    <field name=\"fragment-keywords\" list=\"true\" type=\"structure\" include-if=\"$atype-long = ('journal-fragment') or $atype-long = ('book-fragment')\">\r\n        <structure context=\"nlm:kwd-group/nlm:kwd\">\r\n            <field name=\"name\">*|text()</field>\r\n            <field name=\"type\">../@kwd-group-type</field>\r\n        </structure>\r\n    </field>\r\n\r\n\r\n    <!-- Adjuncts Only -->\r\n\r\n    <field name=\"adjunct-type\" include-if=\"$atype = ('adjunct')\">$adjunct-type</field>\r\n\r\n    <field name=\"adjunct-subjects\" include-if=\"$atype = ('adjunct')\" list=\"true\">\r\n        atom:link[\r\n          @c:role='http://schema.highwire.org/Journal/Article' or\r\n          @c:role='http://schema.highwire.org/Journal/Issue' or\r\n          @c:role='http://schema.highwire.org/Journal/Fragment'\r\n        ]\r\n        [@type='application/atom+xml; type=entry']/@href\r\n    </field>\r\n\r\n    <field name=\"adjunct-files\" include-if=\"$atype = ('adjunct') and ($adjunct-type = ('container'))\" list=\"true\" type=\"structure\">\r\n      <structure context=\"atom:link[@c:role='http://schema.highwire.org/Adjunct']\">\r\n        <variable name=\"file-href\">@href</variable>\r\n        <field name=\"path\">$file-href</field>\r\n        <field name=\"title\">$adjunct-html-doc//xhtml:a[contains($file-href, @href)]/text()</field>\r\n        <field name=\"description\">$adjunct-html-doc//xhtml:a[contains($file-href, @href)]/following-sibling::text()</field>\r\n        <field name=\"adjunct\">@c:via</field>\r\n        <field name=\"pisa\">doc(resolve-uri(@c:via,base-uri()))//nlm:pub-id[@pub-id-type='other' and @hwp:sub-type='pisa'][1]/text()</field>\r\n        <field name=\"mime-type\">@type</field>\r\n      </structure>\r\n    </field>\r\n\r\n    <field name=\"adjunct-enclosures\" include-if=\"$atype = ('adjunct')\" list=\"true\">\r\n        atom:link[@c:role='http://schema.highwire.org/Adjunct'][@rel='enclosure']/@c:via\r\n    </field>\r\n\r\n    <field name=\"atom-collections\" list=\"true\" type=\"structure\" include-if=\"atom:category[contains(@scheme, '#publisher')]\">\r\n        <structure context=\"atom:category[starts-with(@scheme, 'http://atom-collections.highwire.org/')]\">\r\n            <field name=\"scheme\">@scheme</field>\r\n            <field name=\"term\">@term</field>\r\n            <field name=\"atomid\">atom:id</field>\r\n            <field name=\"label\" include-if=\"@label\">@label</field>\r\n        </structure>\r\n    </field>\r\n\r\n\r\n    <!-- Comments Only -->\r\n\r\n    <field name=\"comment-authors\" include-if=\"$atype = ('comment')\" list=\"true\">\r\n        (atom:author/atom:name/text(), atom:contributor/atom:name/text())\r\n    </field>\r\n\r\n    <field name=\"comment-authors-xml\" include-if=\"$atype = ('comment')\" list=\"true\">\r\n        (atom:author, atom:contributor)\r\n    </field>\r\n\r\n    <field name=\"comment-subject\" list=\"true\" include-if=\"$atype = ('comment')\">\r\n        atom:link[@rel='related'][@c:role='http://schema.highwire.org/Journal/Issue' or @c:role='http://schema.highwire.org/Journal/Article']/@href\r\n    </field>\r\n\r\n    <field name=\"comment-flag\" include-if=\"$atype = ('comment')\">\r\n        atom:category[@scheme='http://schema.highwire.org/Journal/Comment#flag']/@term\r\n    </field>\r\n\r\n    <field name=\"comment-html\" include-if=\"$atype = ('comment')\">\r\n        atom:link[@rel='http://schema.highwire.org/Publishing#edit-variant'][@c:role='http://schema.highwire.org/Publishing/default'][@type='application/xhtml+xml']/@href\r\n    </field>\r\n\r\n\r\n    <!-- Course/CME Only -->\r\n    <field name=\"course-id\" include-if=\"$atype = ('course')\">\r\n        nlm:pub-id[@pub-id-type='course-id'][1]/text()\r\n    </field>\r\n\r\n    <field name=\"program-code\" include-if=\"$atype = ('course')\">\r\n        nlm:pub-id[@pub-id-type='program-code'][1]/text()\r\n\r\n    </field>\r\n\r\n    <field name=\"date-experation\" type=\"structure\" include-if=\"$atype = ('course')\">\r\n        <structure context=\"nlm:pub-date[@pub-type='expiration'][1]\">\r\n            <field name=\"start\">@hwp:start</field>\r\n            <field name=\"end\">@hwp:end</field>\r\n            <field name=\"season\">nlm:season/text()</field>\r\n        </structure>\r\n    </field>\r\n\r\n    <field name=\"course-credits-count\" include-if=\"$atype = ('course')\">\r\n        atom:category[@scheme='http://schema.highwire.org/Course/Credit#metadata']/course:credits/@count\r\n    </field>\r\n\r\n    <field name=\"course-accreditation\" include-if=\"$atype = ('course')\">\r\n        atom:category[@scheme='http://schema.highwire.org/Course/Credit#metadata']/course:credits/text()\r\n    </field>\r\n\r\n    <field name=\"course-link\" include-if=\"$atype = ('course')\">\r\n        atom:link[\r\n            @rel='http://schema.highwire.org/Linking/External#Rievent' or\r\n            @rel='http://schema.highwire.org/Linking/External#CME'\r\n        ]/@href\r\n    </field>\r\n\r\n    <!-- Books and Book Editions -->\r\n    <field name=\"isbn\" include-if=\"$atype-long = ('book') or $atype-long = ('book-edition')\">\r\n        nlm:pub-id[@pub-id-type='isbn']/text()\r\n    </field>\r\n    <field name=\"isbn-paper\" include-if=\"$atype-long = ('book') or $atype-long = ('book-edition')\">\r\n        if (exists(nlm:book-meta/nlm:isbn[@pub-type='paper' and @specific-use='display']/text()))\r\n        then nlm:book-meta/nlm:isbn[@pub-type='paper' and @specific-use='display']/text()\r\n        else nlm:book-meta/nlm:isbn[@pub-type='paper']/text()\r\n    </field>\r\n    <field name=\"isbn-cloth\" include-if=\"$atype-long = ('book') or $atype-long = ('book-edition')\">\r\n        if (exists(nlm:book-meta/nlm:isbn[@pub-type='cloth' and @specific-use='display']/text()))\r\n        then nlm:book-meta/nlm:isbn[@pub-type='cloth' and @specific-use='display']/text()\r\n        else nlm:book-meta/nlm:isbn[@pub-type='cloth']/text()\r\n    </field>\r\n    <field name=\"eisbn\" include-if=\"$atype-long = ('book') or $atype-long = ('book-edition')\">\r\n        if (exists(nlm:book-meta/nlm:isbn[@pub-type='epub' and @specific-use='display']/text()))\r\n        then nlm:book-meta/nlm:isbn[@pub-type='epub' and @specific-use='display']/text()\r\n        else nlm:book-meta/nlm:isbn[@pub-type='epub']/text()\r\n    </field>\r\n    <field name=\"book-title-group\" include-if=\"$atype-long = ('book') or $atype-long = ('book-edition')\">\r\n        nlm:book-meta/nlm:book-title-group\r\n    </field>\r\n    <field name=\"book-eissn\" include-if=\"$atype-long = ('book') or $atype-long = ('book-edition')\">\r\n        nlm:pub-id[@pub-id-type='issn-epub']/text()\r\n    </field>\r\n\r\n    <field name=\"book-pissn\" include-if=\"$atype-long = ('book') or $atype-long = ('book-edition')\">\r\n        nlm:pub-id[@pub-id-type='issn-ppub']/text()\r\n    </field>\r\n\r\n    <field name=\"page-count\" include-if=\"$atype-long = ('book') or $atype-long = ('book-edition')\">\r\n        nlm:book-meta/nlm:counts/nlm:page-count/@count\r\n    </field>\r\n\r\n    <!-- Book Editions -->\r\n\r\n    <field name=\"book-edition-cover-images\" list=\"true\" include-if=\"$atype-long = ('book-edition')\">\r\n        atom:link[@c:role='http://schema.highwire.org/variant/cover-source' and @rel='alternate']/@href\r\n    </field>\r\n\r\n    <field name=\"series\" include-if=\"$atype-long = ('book-edition')\" list=\"true\">\r\n        nlm:book-meta/nlm:series/text()\r\n    </field>\r\n\r\n    <field name=\"book-author-comments-xml\" include-if=\"$atype-long = ('book-edition')\" list=\"true\">\r\n        //nlm:author-comment\r\n    </field>\r\n\r\n    <!-- book edition -->\r\n    <!-- related works as parsed from the recommendations service. currently this only comes -->\r\n    <!-- in XML form, so we're going to handle it as a list here. -->\r\n    <!--\r\n    <variable name=\"book-edition-related-works\" include-if=\"$atype-long = ('book-edition')\">\r\n        doc(concat('http://recommendations-alpha.highwire.org/like/content',$apath,'?scope=books',$apath))\r\n    </variable>\r\n\r\n    <field name=\"related-works\" list=\"true\" include-if=\"$atype-long = ('book-edition')\">\r\n        $book-edition-related-works//atom:entry/atom:link/@href\r\n    </field>\r\n    -->\r\n    <!-- end book edition related works -->\r\n\r\n    <field name=\"book-permissions\" include-if=\"$atype-long = ('book-edition')\">\r\n        nlm:book-meta/nlm:permissions\r\n    </field>\r\n\r\n    <field name=\"book-volume\" include-if=\"$atype-long = ('book-edition')\">\r\n        nlm:book-meta/nlm:volume/text()\r\n    </field>\r\n\r\n    <field name=\"book-edition\" include-if=\"$atype-long = ('book-edition')\">\r\n        nlm:book-meta/nlm:edition/text()\r\n    </field>\r\n\r\n    <field name=\"book-edition\" include-if=\"$atype-long = ('book-edition')\">\r\n        nlm:book-meta/nlm:edition/text()\r\n    </field>\r\n\r\n    <field name=\"tizra-href\" include-if=\"$atype-long = ('book-edition')\">\r\n        atom:link[@rel='http://schema.highwire.org/Linking/External#Tizra']/@href[1]\r\n    </field>\r\n\r\n    <field name=\"tizra-preview\" include-if=\"$atype-long = ('book-edition')\">\r\n        atom:link[@rel='http://schema.highwire.org/Linking/External#TizraPreview']/@href[1]\r\n    </field>\r\n\r\n    <field name=\"book-alt-title\" include-if=\"$atype-long = ('book-edition')\">\r\n        nlm:book-meta/nlm:book-title-group/nlm:alt-title/text()\r\n    </field>\r\n\r\n    <field name=\"book-publisher\" include-if=\"$atype-long = ('book-edition')\" list=\"true\">\r\n        nlm:book-meta/nlm:publisher/nlm:publisher-name/text()\r\n    </field>\r\n\r\n    <!-- Book Sections -->\r\n    <field name=\"book-part-categories\" list=\"true\" type=\"structure\">\r\n        <structure context=\"nlm:book-part-categories//nlm:subject\" include-if=\"exists(text())\">\r\n            <field name=\"name\">text()</field>\r\n            <field name=\"type\" list=\"true\">ancestor::*/@subj-group-type</field>\r\n            <field name=\"content-type\">@content-type</field>\r\n        </structure>\r\n    </field>\r\n\r\n    <field name=\"book-section-part-type\" include-if=\"$atype-long = ('book-section')\">\r\n        atom:category[@scheme=\"http://schema.highwire.org/Book/Section#part-type\"]/@term\r\n    </field>\r\n\r\n    <!-- GeoRef record -->\r\n    <field name=\"publisher-name\" include-if=\"$atype = ('georef')\">\r\n        nlm:publisher/nlm:publisher-name/text()\r\n    </field>\r\n\r\n    <field name=\"georef-bibliographic-level\" include-if=\"$atype = ('georef')\">\r\n        atom:category[@scheme='http://schema.highwire.org/Data/Georef#bibliographic-level']/@term\r\n    </field>\r\n\r\n    <field name=\"georef-document-type\" include-if=\"$atype = ('georef')\" list=\"true\">\r\n        atom:category[@scheme='http://schema.highwire.org/Data/Georef#document-type']/@term\r\n    </field>\r\n\r\n    <field name=\"georef-document-in-process\" include-if=\"$atype = ('georef')\" type=\"boolean\">\r\n        exists(atom:category[@scheme='http://schema.highwire.org/Data/Georef#in-process'])\r\n    </field>\r\n\r\n    <field name=\"georef-ip\" include-if=\"$atype = ('georef')\">\r\n        nlm:pub-id[@pub-id-type='georef-ip']/text()\r\n    </field>\r\n\r\n    <field name=\"georef-id\" include-if=\"$atype = ('georef')\">\r\n      nlm:pub-id[@pub-id-type=\"georef\"]/text()\r\n    </field>\r\n\r\n    <!-- Sigtrans DBCS -->\r\n\r\n    <!-- To fetch Resource Type for Pathway, Node, Component and Relation -->\r\n    <variable name=\"resource-type-long\" include-if=\"$atype = ('resource')\">\r\n        lower-case(atom:category[@scheme='urn:org.highwire:external:resource']/@term)\r\n    </variable>\r\n\r\n    <variable name=\"resource-type\" include-if=\"$atype = ('resource')\">\r\n        tokenize($resource-type-long,'-')[last()]\r\n    </variable>\r\n    <!-- To fetch Resource Type for Pathway, Node, Component and Relation -->\r\n\r\n    <field name=\"resource-type-long\">$resource-type-long</field>\r\n\r\n    <field name=\"resource-type\">$resource-type</field>\r\n\r\n    <!-- Resource Only -->\r\n    <field name=\"resource-summary\" include-if=\"$atype = ('resource')\">atom:summary/node()</field>\r\n\r\n    <field name=\"resource-authors\" include-if=\"$atype = ('resource')\" list=\"true\">\r\n        (atom:author/atom:name/text(), atom:contributor/atom:name/text())\r\n    </field>\r\n\r\n    <field name=\"resource-authors-xml\" include-if=\"$atype = ('resource')\" list=\"true\">\r\n        (atom:author, atom:contributor)\r\n    </field>\r\n\r\n    <field name=\"resource-title-alt-abbr\" include-if=\"($atype = ('resource'))\">\r\n        hwp:alt-title[@hwp:alt-title-type='abbrev']/text()\r\n    </field>\r\n\r\n    <!-- Node Only -->\r\n    <field name=\"resource-component-id\" include-if=\"$resource-type = ('node')\">\r\n        nlm:pub-id[@pub-id-type='other' and @hwp:sub-type='component-id'][1]/text()\r\n    </field>\r\n\r\n    <field name=\"resource-node-connection-map-type\"  include-if=\"$resource-type = ('node')\">\r\n        lower-case(atom:category[@scheme='urn:org.highwire:connections-map-node:type']/@term)\r\n    </field>\r\n\r\n    <!-- Node and Relation Only -->\r\n    <field name=\"resource-path-id\" include-if=\"($resource-type = ('node')) or ($resource-type = ('relation'))\">\r\n        nlm:pub-id[@pub-id-type='other' and @hwp:sub-type='path-id'][1]/text()\r\n    </field>\r\n\r\n    <!-- Relation Only -->\r\n    <field name=\"resource-relation-connection-map-type\"  include-if=\"$resource-type = ('relation')\">\r\n        lower-case(atom:category[@scheme='urn:org.highwire:connections-map-relation:type']/@term)\r\n    </field>\r\n\r\n    <field name=\"resource-relation-object-source-id\" include-if=\"$resource-type = ('relation')\">\r\n        nlm:object-id[@pub-id-type='other' and @hwp:sub-type='source-id'][1]/text()\r\n    </field>\r\n\r\n    <field name=\"resource-relation-object-target-id\" include-if=\"$resource-type = ('relation')\">\r\n        nlm:object-id[@pub-id-type='other' and @hwp:sub-type='target-id'][1]/text()\r\n    </field>\r\n\r\n    <!-- Component Only -->\r\n    <field name=\"resource-component-connections-map-type\"  include-if=\"$resource-type = ('component')\">\r\n        lower-case(atom:category[@scheme='urn:org.highwire:connections-map-component:type']/@term)\r\n    </field>\r\n\r\n    <field name=\"resource-component-connections-map-collection-type\"  include-if=\"($resource-type = ('component'))\">\r\n        lower-case(atom:category[@scheme='urn:org.highwire:connections-map-component:collection:type']/@term)\r\n    </field>\r\n\r\n    <field name=\"resource-component-connections-map-collection-model-organism\"  include-if=\"($resource-type = ('component'))\">\r\n        lower-case(atom:category[@scheme='urn:org.highwire:connections-map-component:collection:model-organism']/@term)\r\n    </field>\r\n\r\n    <!-- Pathway Only -->\r\n    <field name=\"resource-pathway-connection-map-type\"  include-if=\"$resource-type = ('pathway')\">\r\n        lower-case(atom:category[@scheme='urn:org.highwire:connections-map-pathway:type']/@term)\r\n    </field>\r\n\r\n    <field name=\"resource-pathway-connections-map-collection-model-organism\"  include-if=\"($resource-type = ('pathway'))\">\r\n        lower-case(atom:category[@scheme='urn:org.highwire:connections-map-pathway:collection:model-organism']/@term)\r\n    </field>\r\n\r\n    <!-- News Story Only -->\r\n    <field name=\"news-story-type\"  include-if=\"$atype-long = ('news-story')\">\r\n        lower-case(atom:category[@scheme='http://schema.highwire.org/News/Story#story-type']/@term)\r\n    </field>\r\n    <field name=\"news-story-publisher-slug\"  include-if=\"$atype-long = ('news-story')\">\r\n        //nlm:pub-id[@pub-id-type=\"publisher\"]/text()\r\n    </field>\r\n    <field name=\"news-story-summary\"  include-if=\"$atype-long = ('news-story')\">\r\n        atom:summary/node()\r\n    </field>\r\n\r\n    <!-- DEPRICATED -->\r\n\r\n    <!-- metadata-doc variable is now DEPRICATED -->\r\n    <variable name=\"metadata-doc\">\r\n        if ($atype = ('article') or $atype = ('compilation'))\r\n        then\r\n          if (doc-available(concat('http://markup.highwire.org/metadata',$apath)))\r\n          then doc(concat('http://markup.highwire.org/metadata',$apath))\r\n          else ()\r\n        else ()\r\n    </variable>\r\n\r\n    <!--DEPRECATED 4/13/2012 -->\r\n    <field name=\"date-published\">atom:published[1]/text()</field>\r\n    <field name=\"date-edited\">atom:edited[1]/text()</field>\r\n    <field name=\"date-updated\">atom:updated[1]/text()</field>\r\n    <field name=\"date-created\">atom:created[1]/text()</field>\r\n    <field name=\"date-received\">atom:received[1]/text()</field>\r\n\r\n    <!--DEPRECATED 4/13/2012 -->\r\n    <field name=\"variants\" list=\"true\">\r\n        for $var in (atom:link[@rel=\"alternate\"][@type='application/xhtml+xml']/@c:role)\r\n        return\r\n        if (matches($var, \"http://schema.highwire.org/variant\"))\r\n        then replace($var, \"http://schema.highwire.org/variant/\", \"\")\r\n        else ()\r\n    </field>\r\n\r\n    <!-- START MARKUP SERVER DATES -->\r\n    <!--DEPRECATED 4/13/2012 -->\r\n    <field name=\"epubdate\" type=\"structure\" include-if=\"exists($metadata-doc)\">\r\n        <structure context=\"$metadata-doc//metadata:date[@type='online this-version']\">\r\n            <field name=\"start\">@start</field>\r\n            <field name=\"end\">@end</field>\r\n        </structure>\r\n    </field>\r\n\r\n    <!--DEPRECATED 4/13/2012 -->\r\n    <field name=\"ppubdate\" type=\"structure\" include-if=\"exists($metadata-doc)\">\r\n        <structure context=\"$metadata-doc//metadata:date[@type='print']\">\r\n            <field name=\"start\">@start</field>\r\n            <field name=\"end\">@end</field>\r\n        </structure>\r\n    </field>\r\n\r\n    <!--DEPRECATED 4/13/2012 -->\r\n    <field name=\"fpubdate\" type=\"structure\" include-if=\"exists($metadata-doc)\">\r\n        <structure context=\"$metadata-doc//metadata:date[@type='online first-version']\">\r\n            <field name=\"start\">@start</field>\r\n            <field name=\"end\">@end</field>\r\n        </structure>\r\n    </field>\r\n\r\n    <!-- END MARKUP SERVER DATES -->\r\n\r\n    <!--DEPRECATED 11/01/2012 -->\r\n    <field name=\"cpath-alias\" list=\"true\" include-if=\"exists($metadata-doc)\">\r\n        $metadata-doc//metadata:urls/metadata:url/@href\r\n    </field>\r\n\r\n    <!--DEPRECATED 4/13/2012 -->\r\n    <field name=\"article-authors\" include-if=\"$atype = ('article') or $atype = ('compilation')\" list=\"true\">\r\n        (atom:author[@nlm:contrib-type='author']/atom:name/text(),\r\n        atom:contributor[@nlm:contrib-type='author']/atom:name/text())\r\n    </field>\r\n\r\n    <!--DEPRECATED 4/13/2012 -->\r\n    <field name=\"article-subhead-plain\" include-if=\"$atype = ('article') or $atype = ('compilation')\" list=\"true\">\r\n        nlm:article-categories//nlm:subj-group[@subj-group-type=\"heading\" and not(descendant::nlm:subj-group)]/nlm:subject/text()\r\n    </field>\r\n\r\n    <!--DEPRECATED 4/13/2012 -->\r\n    <field name=\"article-subhead-singular\" include-if=\"$atype = ('article') or $atype = ('compilation')\" list=\"true\">\r\n        nlm:article-categories/nlm:subj-group[@subj-group-type=\"heading\"]/nlm:subj-group[@subj-group-type=\"display-group\"]/nlm:subject[@content-type=\"display-singular\"]/text()\r\n    </field>\r\n\r\n    <!--DEPRECATED 4/13/2012 -->\r\n    <field name=\"article-subhead-plural\" include-if=\"$atype = ('article') or $atype = ('compilation')\" list=\"true\">\r\n        nlm:article-categories/nlm:subj-group[@subj-group-type=\"heading\"]/nlm:subj-group[@subj-group-type=\"display-group\"]/nlm:subject[@content-type=\"display-plural\"]/text()\r\n    </field>\r\n\r\n    <!--DEPRECATED 4/13/2012 -->\r\n    <field name=\"article-subhead-plural\" include-if=\"$atype = ('article') or $atype = ('compilation')\" list=\"true\">\r\n        nlm:article-categories/nlm:subj-group[@subj-group-type=\"heading\"]/nlm:subj-group[@subj-group-type=\"display-group\"]/nlm:subject[@content-type=\"display-plural\"]/text()\r\n    </field>\r\n\r\n    <!--DEPRECATED 4/13/2012 -->\r\n    <field name=\"article-subhead-plural\" include-if=\"$atype = ('article') or $atype = ('compilation')\" list=\"true\">\r\n        nlm:article-categories/nlm:subj-group[@subj-group-type=\"heading\"]/nlm:subj-group[@subj-group-type=\"display-group\"]/nlm:subject[@content-type=\"display-plural\"]/text()\r\n    </field>\r\n\r\n    <!--DEPRECATED 4/13/2012 -->\r\n    <field name=\"article-subhead-plural\" include-if=\"$atype = ('article') or $atype = ('compilation')\" list=\"true\">\r\n        nlm:article-categories/nlm:subj-group[@subj-group-type=\"heading\"]/nlm:subj-group[@subj-group-type=\"display-group\"]/nlm:subject[@content-type=\"display-plural\"]/text()\r\n    </field>\r\n\r\n    <!--DEPRECATED 4/13/2012 -->\r\n    <field name=\"article-subhead-plural\" include-if=\"$atype = ('article') or $atype = ('compilation')\" list=\"true\">\r\n        nlm:article-categories/nlm:subj-group[@subj-group-type=\"heading\"]/nlm:subj-group[@subj-group-type=\"display-group\"]/nlm:subject[@content-type=\"display-plural\"]/text()\r\n    </field>\r\n\r\n    <!--DEPRECATED 4/13/2012 -->\r\n    <field name=\"article-full-pdf\">(atom:link[@href][@rel=\"alternate\"][\r\n        @type=\"application/pdf\"][\r\n        @c:role=\"http://schema.highwire.org/variant/full-text\"]/@href)[1]\r\n    </field>\r\n\r\n    <!--DEPRECATED 4/13/2012 -->\r\n    <field name=\"article-abri-pdf\">(atom:link[@href][@rel=\"alternate\"][\r\n        @type=\"application/pdf\"][\r\n        @c:role=\"http://schema.highwire.org/variant/abridgement\"]/@href)[1]\r\n    </field>\r\n\r\n    <!--DEPRECATED 4/13/2012 -->\r\n    <field name=\"article-collections\" list=\"true\" type=\"integer\">\r\n        $article-collections-entry/atom:category[@scheme='http://schema.highwire.org/Collection#Hierarchy']/xs:decimal(collection:id/text())\r\n    </field>\r\n\r\n    <!--DEPRECATED 4/19/2012 -->\r\n    <field name=\"article-related\" include-if=\"$atype = ('article') or $atype = ('compilation')\" list=\"true\">\r\n        atom:link[@rel='related'][\r\n        @c:role='http://schema.highwire.org/Journal/Article']/@href\r\n    </field>\r\n\r\n    <!--DEPRECATED 2013-04-19. See new \"adjuncts\" field. -->\r\n    <field name=\"article-adjuncts\" include-if=\"$atype = ('article') or $atype = ('compilation')\" list=\"true\">\r\n        atom:link[@c:role='http://schema.highwire.org/Adjunct']/@href\r\n    </field>\r\n\r\n</policy>\r\n\r\n",
"signature": "a9480e55204cf384045ba661fc3921a3",
"mimeTypes": [
"application/vnd.hw.drupal-journal+json"
],
"newMimeType": null,
"corpusList": [
"bjres"
],
"newCorpus": null,
"updatedDate": 1493827028401,
"enable": false,
"ignorePaths": null,
"inclusionPaths": null,
"new": false,
"id": "29579210-3019-11e7-b647-1195de1ee295"
},
{
"policyId": "docbook-test",
"name": "Docbook Test - updated",
"policyType": "xslt",
"url": "http://staticfs.highwire.org/content-systems-dev/test/docbook-xhtml-xslt/convert.atom-docbook-xhtml.xsl",
"format": "xml",
"source": "<xsl:stylesheet version=\"2.0\"\n  xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"\n  xmlns:atom=\"http://www.w3.org/2005/Atom\"\n  xmlns:c=\"http://schema.highwire.org/Compound\"\n  exclude-result-prefixes=\"#all\">\n  \n  <xsl:import href=\"base/html/final-pass.xsl\"/>\n  \n  <xsl:template match=\"/\">\n    <xsl:choose>\n      <xsl:when test=\"atom:entry\">\n        <xsl:apply-templates select=\"doc(resolve-uri(atom:entry/atom:link[@rel eq 'alternate'][@c:role eq 'http://schema.highwire.org/variant/source'][@type eq 'application/xml']/@href, base-uri(atom:entry)))\"/>\n      </xsl:when>\n      <xsl:otherwise>\n        <xsl:apply-imports/>\n      </xsl:otherwise>\n    </xsl:choose>\n  </xsl:template>\n  \n</xsl:stylesheet>",
"signature": "e2c69ccf61980abcdf1f65e4c7715b81",
"mimeTypes": [
"application/vnd.hw.docbook-xhtml+xml"
],
"newMimeType": null,
"corpusList": [
"freebird"
],
"newCorpus": null,
"updatedDate": 1492724127301,
"enable": false,
"ignorePaths": null,
"inclusionPaths": null,
"new": false,
"id": "450f2750-2611-11e7-9fe8-1195de1ee295"
},
{
"policyId": "nunes-test",
"name": "nunes",
"policyType": "siena",
"url": "http://staticfs.highwire.org/platform/atom-lite/policies/nunes-test/definition.xml",
"format": "xml",
"source": "<?xml-model href=\"http://staticfs.highwire.org/content-systems/xml-schema/extract/policy.rnc\"?>\n<?xml-model href=\"http://staticfs.highwire.org/content-systems/xml-schema/extract/policy.sch\"?>\n<policy\n  xmlns=\"http://schema.highwire.org/DataExtract\"\n  xmlns:atom=\"http://www.w3.org/2005/Atom\"\n  xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\n  xmlns:nlm=\"http://schema.highwire.org/NLM/Journal\"\n  xmlns:hwp=\"http://schema.highwire.org/Journal\"\n  xmlns:c=\"http://schema.highwire.org/Compound\"\n  xmlns:xhtml=\"http://www.w3.org/1999/xhtml\"\n  xmlns:r=\"http://schema.highwire.org/Revision\"\n  context=\"/atom:entry\"\n  name=\"nunes-test\"\n  id-field=\"apath\"\n  corpus-field=\"corpus\"\n  type-field=\"item-type\">\n  \n  \n  <variable name=\"apath\">(atom:link[@rel='self']/@href)[1]</variable>\n  \n  <field name=\"apath\">$apath</field>\n  <field name=\"corpus\">'freebird'</field>\n  <field name=\"item-type\">'test'</field>\n  \n  <!--<variable name=\"square\">function ($in as xs:integer) { $in * $in }</variable>\n  <field name=\"square-of-2\">$square(2)</field>-->\n  \n  \n</policy>",
"signature": "2ae25a3fa0c74d6ef1ec7b10b54a4928",
"mimeTypes": [
"application/prs.nunes-test+json"
],
"newMimeType": null,
"corpusList": [
"freebird",
"freebird2"
],
"newCorpus": null,
"updatedDate": 1494977549651,
"enable": false,
"ignorePaths": null,
"inclusionPaths": null,
"new": false,
"id": "a4f78d80-369a-11e7-a937-1195de1ee295"
},
{
"policyId": "ac-resource-test",
"name": "ac-resource-test",
"policyType": null,
"url": "http://staticfs.highwire.org/platform/atom-lite/policies/ac-resource-test/definition.xml",
"format": "json/xml",
"source": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<dx:policy context=\"/atom:entry\" \n  xmlns:dx=\"http://schema.highwire.org/DataExtract\"\n  xmlns:atom=\"http://www.w3.org/2005/Atom\"\n  xmlns:c=\"http://schema.highwire.org/Compound\"\n  xmlns:nlm=\"http://schema.highwire.org/NLM/Journal\" \n  xmlns:hwp=\"http://schema.highwire.org/Journal\"\n  xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\n  >\n  \n  <!--xi:include xmlns:xi=\"http://www.w3.org/2001/XInclude\"\n    href=\"src/test/resources/include/atom-defines.xml\" /-->\n  \n  <dx:variable name=\"type.html\">'application/xhtml+xml'</dx:variable>\n  <dx:variable name=\"type.pdf\">'application/pdf'</dx:variable>\n  <dx:variable name=\"role.abstract\">'http://schema.highwire.org/variant/abstract'</dx:variable>\n  <dx:variable name=\"role.fulltext\">(\n    'http://schema.highwire.org/variant/body', \n    'http://schema.highwire.org/variant/full-text'\n    )</dx:variable>\n  <dx:variable name=\"role.expansion\">'http://schema.highwire.org/variant/expansion'</dx:variable>\n  <dx:variable name=\"self\">atom:link[@rel = 'self']/@href</dx:variable>\n  <dx:variable name=\"role\">atom:category[@scheme='http://schema.highwire.org/Publishing#role'][1]/@term</dx:variable>\n  <dx:variable name=\"qualified-id\">if ($role = ('http://schema.highwire.org/Data/Georef', 'http://schema.highwire.org/News/Story'))\n     then \n         atom:id/text() \n         else if ($role = 'http://schema.highwire.org/Dataset') then\n           concat(nlm:pub-id[@pub-id-type eq 'other'][@hwp:sub-type eq 'slug'][1]/text(),';',nlm:pub-id[@pub-id-type eq 'other'][@hwp:sub-type eq 'slug'][1]/text())\n           else \n             nlm:pub-id[@pub-id-type eq 'other'][@hwp:sub-type eq 'pisa'][1]/text()\n  </dx:variable>\n  <dx:variable name=\"qualifier\">substring-before($qualified-id, ';')</dx:variable>\n  <dx:variable name=\"id\">if (string-length($qualified-id) gt 1) then substring-after($qualified-id, ';') else atom:id/text() </dx:variable>\n  <dx:variable name=\"corpus\">(nlm:book-meta/nlm:book-id[@pub-id-type eq 'hwp'], nlm:journal-meta/nlm:journal-id[@journal-id-type eq 'hwp'])[1]/text()\n  </dx:variable>\n  <dx:variable name=\"datastream\">$corpus</dx:variable>\n  <dx:variable name=\"private\">false()</dx:variable>\n    <dx:variable name=\"type-id\">if ($role = (\n      'http://schema.highwire.org/Book/Edition', \n      'http://schema.highwire.org/Journal/Issue',\n      'http://schema.highwire.org/Dataset'\n      )) \n    then '2'\n    else if ($role = (\n      'http://schema.highwire.org/Book/Section', \n      'http://schema.highwire.org/Journal/Article',\n      'http://schema.highwire.org/Data/Georef',\n      'http://schema.highwire.org/News/Story'\n      ))\n      then '1'\n    else if ($role = (\n      'http://schema.highwire.org/Book/Fragment', \n      'http://schema.highwire.org/Journal/Fragment'\n      ))\n      then '3'\n    else if ($role = 'http://schema.highwire.org/Adjunct')\n      then '4'\n    else '-1'\n  </dx:variable>\n  <dx:variable name=\"parent-uri\">if ($role = 'http://schema.highwire.org/Adjunct' and exists(atom:link[@rel='related'][@c:role='http://schema.highwire.org/Journal/Article' or @c:role='http://schema.highwire.org/Journal/Issue'][last()]/@href))\n    then atom:link[@rel='related'][@c:role='http://schema.highwire.org/Journal/Article' or @c:role='http://schema.highwire.org/Journal/Issue'][last()]/@href \n    else if ($role = 'http://schema.highwire.org/Adjunct' and exists(atom:link[@rel='related'][@c:role='http://schema.highwire.org/Journal/Fragment' or @c:role='http://schema.highwire.org/Book/Fragment'][last()]/@href))\n    then atom:link[@rel='related'][@c:role='http://schema.highwire.org/Journal/Fragment' or @c:role='http://schema.highwire.org/Book/Fragment'][last()]/@href \n    else (atom:link[@rel='http://schema.highwire.org/Compound#parent']/@href,\n    c:parent/atom:link[@rel='self']/@href\n    )[1]\n  </dx:variable>\n\n  <dx:variable name=\"date\">if (not(empty(nlm:pub-date[@pub-type eq 'epub-version'])))\n    then nlm:pub-date[@pub-type eq 'epub-version'][1]/@hwp:start \n    else if (not(empty(nlm:pub-date[@pub-type eq 'epub'])))\n      then nlm:pub-date[@pub-type eq 'epub'][1]/@hwp:start \n      else\n        if (not(empty(nlm:pub-date[@pub-type eq 'epub-ppub']))) \n        then nlm:pub-date[@pub-type eq 'epub-ppub'][1]/@hwp:start \n        else\n          if (not(empty(nlm:pub-date[@pub-type eq 'ppub']))) \n          then nlm:pub-date[@pub-type eq 'ppub'][1]/@hwp:start \n          else \n            if (not(empty(atom:published[1]/text()))) \n            then atom:published[1]/text()\n            else atom:updated[1]/text()\n  </dx:variable>\n\n  <dx:variable name=\"pub-date\">if (string-length($date) eq 4) \n    then concat($date, '-01-01T00:00:00')\n    else\n      if (string-length($date) eq 7)\n      then concat($date, '-01T00:00:00')\n      else\n        if (string-length($date) eq 10)\n        then concat($date, 'T00:00:00')\n        else $date\n  </dx:variable>\n\n  <dx:variable name=\"master-id\">nlm:pub-id[@pub-id-type eq 'other'][@hwp:sub-type eq 'pisa-master'][1]/text()</dx:variable>\n  <dx:variable name=\"doi\">nlm:pub-id[@pub-id-type eq 'doi'][1]/text()</dx:variable>\n  <!-- <dx:variable name=\"sections\">distinct-values(nlm:article-categories/nlm:subj-group[@subj-group-type eq 'heading']//nlm:subject[@content-type eq \"original\"] ! string())</dx:variable> -->\n  <dx:variable name=\"sections\" type=\"list\">distinct-values(nlm:article-categories/nlm:subj-group[@subj-group-type eq 'heading']//nlm:subject[empty(@content-type) or @content-type eq 'original'])</dx:variable>\n  <dx:variable name=\"views\">atom:link[@rel eq 'alternate']</dx:variable>\n  <dx:variable name=\"abstract\">$views[@c:role = $role.abstract and starts-with(@href, '/')][1]/@href</dx:variable>\n  <dx:variable name=\"full\">$views[@c:role = $role.fulltext and @type = $type.html and starts-with(@href, '/')][1]/@href</dx:variable>\n  <dx:variable name=\"reprint\">$views[@c:role = $role.fulltext and @type = $type.pdf and starts-with(@href, '/')][1]/@href</dx:variable>\n  <dx:variable name=\"expansion\">$views[@c:role = $role.expansion and starts-with(@href, '/')][1]/@href</dx:variable>\n  <dx:variable name=\"data\">if ($type-id = '4') then concat('', $self) else ''</dx:variable>\n  <dx:variable name=\"access-indicator\">if (atom:category[\n            @scheme='http://schema.highwire.org/Journal/Article#open-access'][@term='yes']) \n    then 'oa'\n    else ()\n  </dx:variable>\n  <!-- Add other flags here as required -->\n  <dx:variable name=\"flags\">(\n    if (atom:category[@scheme='http://schema.highwire.org/Journal/Article#open-access'][@term='yes']) \n    then 'OPENACCESS' else ()\n    )\n  </dx:variable>\n  <dx:variable name=\"title\">normalize-space(atom:title[1])</dx:variable>  \n  <dx:field name=\"resource\" type=\"structure\">\n    <dx:structure>\n      <dx:field name=\"role\">$role</dx:field>\n      <dx:field name=\"title\" include-if=\"string-length($title) != 0\">$title</dx:field>\n      <dx:field name=\"uri\">$self</dx:field>\n      <dx:field name=\"datastream\" include-if=\"string-length($datastream) != 0\">$datastream</dx:field>\n      <dx:field name=\"private\">$private</dx:field>\n      <dx:field name=\"type-id\">$type-id</dx:field>\n      <dx:field name=\"parent-uri\" include-if=\"string-length($parent-uri) != 0\">$parent-uri</dx:field>\n      <dx:field name=\"id\" include-if=\"string-length($id) != 0\">$id</dx:field>\n      <dx:field name=\"qualifier\" include-if=\"string-length($qualifier) != 0\">$qualifier</dx:field>\n      <dx:field name=\"qualified-id\" include-if=\"string-length($qualified-id) != 0\">$qualified-id</dx:field>\n      <dx:field name=\"master-id\" include-if=\"string-length($master-id) != 0\">$master-id</dx:field>\n      <dx:field name=\"doi\" include-if=\"string-length($doi) != 0\">$doi</dx:field>\n      <dx:field name=\"pub-date\" include-if=\"(string-length($pub-date) != 0) and ($role != 'http://schema.highwire.org/Adjunct')\">$pub-date</dx:field>\n      <dx:field name=\"abstract\" include-if=\"string-length($abstract) != 0\">$abstract</dx:field>\n      <dx:field name=\"full\" include-if=\"string-length($full) != 0\">$full</dx:field>\n      <dx:field name=\"reprint\" include-if=\"string-length($reprint) != 0\">$reprint</dx:field>\n      <dx:field name=\"data\" include-if=\"string-length($data) != 0\">$data</dx:field>\n      <dx:field name=\"expansion\" include-if=\"string-length($expansion) != 0\">$expansion</dx:field>\n      <dx:field name=\"flags\" include-if=\"not(empty($flags))\" type=\"structure\" list=\"true\">\n        <dx:structure context=\".\">\n          <dx:field name=\"flag\" list=\"true\">$flags</dx:field>\n        </dx:structure>\n      </dx:field>\n      <dx:field name=\"access-indicator\" include-if=\"string-length($access-indicator) != 0\">$access-indicator</dx:field>\n      <dx:field name=\"sections\" include-if=\"not(empty($sections))\" type=\"structure\" list=\"true\">\n        <dx:structure context=\".\">\n          <dx:field name=\"section\" list=\"true\">$sections</dx:field>\n        </dx:structure>\n      </dx:field>\n      <!-- e-Commerce related extras even if duplicative -->\n      <dx:field name=\"ec-corpus\">$corpus</dx:field>\n      <dx:field name=\"ec-parent\" include-if=\"string-length($parent-uri) != 0\">$parent-uri</dx:field>\n      <dx:field name=\"ec-role\" include-if=\"string-length($role) != 0\">$role</dx:field>\n      \n      <dx:variable name=\"parts\">(\n         atom:category[@scheme='http://schema.highwire.org/Book/Section#part-type']/@term, \n         @nlm:article-type\n         )</dx:variable>\n      <dx:field name=\"ec-type\" include-if=\"not(empty($parts))\" list=\"true\">string-join($parts, ', ')</dx:field>\n      <dx:field name=\"ec-access\" include-if=\"string-length($access-indicator) != 0\" list=\"true\">$access-indicator</dx:field>\n    </dx:structure>\n  </dx:field>\n</dx:policy>\n",
"signature": "35bebe7482bc1622cf68b16b215c1105",
"mimeTypes": [
"application/vnd.hw-ac-resource-test+json",
"application/vnd.hw-ac-resource-test+xml"
],
"newMimeType": null,
"corpusList": [],
"newCorpus": null,
"updatedDate": 1488416257534,
"enable": false,
"ignorePaths": null,
"inclusionPaths": null,
"new": false,
"id": "32f14220-e2c7-11e6-bb09-2ba67a9e10f8"
},
{
"policyId": "test_policy",
"name": "TestPolicy",
"policyType": "siena",
"url": "http://staticfs.highwire.org/a4d-extract/policies/drupal-43/definition.xml",
"format": "json",
"source": "<!-- drupal-43 -->\r\n<policy xmlns=\"http://schema.highwire.org/DataExtract\"\r\n    xmlns:atom=\"http://www.w3.org/2005/Atom\"\r\n    xmlns:nlm=\"http://schema.highwire.org/NLM/Journal\"\r\n    xmlns:hwp=\"http://schema.highwire.org/Journal\"\r\n    xmlns:c=\"http://schema.highwire.org/Compound\"\r\n    xmlns:xhtml=\"http://www.w3.org/1999/xhtml\"\r\n    xmlns:collection=\"http://schema.highwire.org/Collection\"\r\n    xmlns:metadata=\"http://schema.highwire.org/Service/Metadata\"\r\n    xmlns:r=\"http://schema.highwire.org/Revision\" context=\"/atom:entry\"\r\n    xmlns:course=\"http://schema.highwire.org/Course\"\r\n    \r\n    name=\"drupal-43\" \r\n    id-field=\"apath\" \r\n    corpus-field=\"jcode\"\r\n    type-field=\"atype-long\">\r\n\r\n    <!-- Variables -->\r\n    <variable name=\"environment\">\r\n        if (contains(/atom:entry/@xml:base, \"sass-alpha\") or contains(/atom:entry/@xml:base, \"sass-dev\"))\r\n        then \"development\"\r\n        else \"production\"\r\n    </variable>\r\n\r\n    <variable name=\"apath\">\r\n      (atom:link[@rel='self']/@href)[1]\r\n    </variable>\r\n\r\n    <variable name=\"atype-raw\">\r\n        lower-case(atom:category[@scheme='http://schema.highwire.org/Publishing#role']/@term)\r\n    </variable>\r\n\r\n    <variable name=\"atype-long\">\r\n        replace(\r\n          replace($atype-raw, \"http://schema.highwire.org/\", \"\"),\r\n          \"/\",\r\n          \"-\"\r\n        )\r\n    </variable>\r\n\r\n    <field name=\"collection-id\">\r\n        nlm:collection-meta/nlm:collection-id/text()\r\n    </field>\r\n\r\n    <variable name=\"atype\">\r\n        tokenize($atype-long,'-')[last()]\r\n    </variable>\r\n\r\n    <variable name=\"issue-toc-href-sass\">\r\n        if ($atype = ('issue'))\r\n        then atom:link[@c:role='http://schema.highwire.org/variant/table-of-contents' and @rel='alternate' and @type='application/xml'][1]/resolve-uri(@href,base-uri())\r\n        else ()\r\n    </variable>\r\n\r\n    <variable name=\"issue-toc-href-service\">\r\n        if ($atype = ('issue'))\r\n        then\r\n          if ($environment = ('production'))\r\n          then\r\n            concat('http://toc-structure.highwire.org/api/internal/content/structure',$apath)\r\n          else if ($environment = ('development'))\r\n          then\r\n            concat('http://toc-structure-alpha.highwire.org/api/internal/content/structure',$apath)\r\n          else()\r\n        else ()\r\n    </variable>\r\n\r\n    <variable name=\"article-version\">\r\n      if ($atype = ('article') or $atype = ('compilation'))\r\n      then\r\n        exists(atom:link[@rel='http://schema.highwire.org/Revision#previous'][@c:role='http://schema.highwire.org/Journal/Article'])\r\n        or\r\n        exists(atom:link[@rel='http://schema.highwire.org/Revision#next'][@c:role='http://schema.highwire.org/Journal/Article'])\r\n      else false\r\n    </variable>\r\n\r\n    <variable name=\"article-collection-member-href\">\r\n        if ($atype = ('article') or $atype = ('compilation'))\r\n        then\r\n          if ($environment = ('production'))\r\n          then\r\n            concat('http://feeds.highwire.org/collection-member',$apath,'?X-HighWire-ErrorResponse2XML')\r\n          else if ($environment = ('development'))\r\n          then\r\n            concat('http://feeds-alpha.highwire.org/collection-member',$apath,'?X-HighWire-ErrorResponse2XML')\r\n          else()\r\n        else ()\r\n    </variable>\r\n\r\n    <variable name=\"article-collections-entry\">\r\n        if ($atype = ('article') or $atype = ('compilation'))\r\n        then\r\n           if (doc-available($article-collection-member-href))\r\n           then doc($article-collection-member-href)/atom:feed/atom:entry\r\n           else ()\r\n        else ()\r\n    </variable>\r\n\r\n    <variable name=\"adjunct-type\">\r\n        if (exists(atom:link[@c:role='http://schema.highwire.org/Adjunct'][@rel='http://schema.highwire.org/Compound#parent']))\r\n        then 'file'\r\n        else 'container'\r\n    </variable>\r\n\r\n    <variable name=\"adjunct-html-href\">\r\n        if ($atype = ('adjunct'))\r\n        then atom:link[@rel='alternate'][@type='application/xhtml+xml'][@c:role='http://schema.highwire.org/Publishing/default']/resolve-uri(@href,base-uri())\r\n        else ()\r\n    </variable>\r\n\r\n    <variable name=\"adjunct-html-doc\">\r\n        if ($atype = ('adjunct'))\r\n        then\r\n          if (doc-available($adjunct-html-href))\r\n          then doc($adjunct-html-href)\r\n          else()\r\n        else()\r\n    </variable>\r\n\r\n    <variable name=\"book-id\">\r\n        if ($atype-long = ('book-fragment') or $atype-long = ('book-section'))\r\n        then nlm:book-meta/nlm:book-id[@pub-id-type='hwp']/text()\r\n        else()\r\n    </variable>\r\n    <variable name=\"jcode\" include-if=\"not($atype-long=('bookgroup'))\">\r\n        (\r\n        nlm:journal-meta/nlm:journal-id[@journal-id-type='hwp']/text(),\r\n        nlm:related-object/@source-id,\r\n        replace(tokenize((atom:link[@rel='self']/@href)[1],'/')[2], '.atom$','')\r\n        )[1]\r\n    </variable>\r\n\r\n    <variable name=\"parent\">\r\n        atom:link[@href][@rel='http://schema.highwire.org/Compound#parent']/@href\r\n    </variable>\r\n\r\n    <!-- Common to all records -->\r\n\r\n    <field name=\"apath\">$apath</field>\r\n    <field name=\"atype\">$atype</field>\r\n    <field name=\"atype-long\">$atype-long</field>\r\n    <field name=\"atom-id\">atom:id[1]/text()</field>\r\n\r\n    <!-- Compilation don't have pisa id's and AC was built to send the issue pisa in instead, crappy work around, but didn't have any other choice -->\r\n    <field name=\"pisa\">\r\n        if ($atype = ('compilation'))\r\n        then\r\n            if (doc-available(resolve-uri($parent, base-uri())))\r\n            then doc(resolve-uri($parent, base-uri()))//nlm:pub-id[@pub-id-type='other' and @hwp:sub-type='pisa'][1]/text()\r\n            else ()\r\n        else nlm:pub-id[@pub-id-type='other' and @hwp:sub-type='pisa'][1]/text()\r\n    </field>\r\n    <!-- Compilation don't have pisa id's and AC was built to send the issue pisa in instead, crappy work around, but didn't have any other choice -->\r\n    <field name=\"pisa-master\">\r\n        if ($atype = ('compilation'))\r\n        then\r\n            if (doc-available(resolve-uri($parent, base-uri())))\r\n            then doc(resolve-uri($parent, base-uri()))//(nlm:pub-id[@pub-id-type='other' and @hwp:sub-type='pisa-master'], nlm:pub-id[@pub-id-type='other' and @hwp:sub-type='pisa']  )[1]/text()\r\n            else ()\r\n        else (nlm:pub-id[@pub-id-type='other' and @hwp:sub-type='pisa-master'], nlm:pub-id[@pub-id-type='other' and @hwp:sub-type='pisa']  )[1]/text()\r\n    </field>\r\n\r\n    <field name=\"featured\">\r\n        lower-case(atom:category[@scheme='http://schema.highwire.org/Journal/Fragment#is-featured-figure']/@term)\r\n    </field>\r\n\r\n    <field name=\"jcode\" include-if=\"not($atype-long=('bookgroup'))\">\r\n        (\r\n          nlm:journal-meta/nlm:journal-id[@journal-id-type='hwp']/text(),\r\n          nlm:related-object/@source-id,\r\n          replace(tokenize((atom:link[@rel='self']/@href)[1],'/')[2], '.atom$','')\r\n        )[1]\r\n    </field>\r\n\r\n    <field name=\"jcode\" include-if=\"$atype-long=('bookgroup')\">\r\n        (\r\n            nlm:book-meta/nlm:book-id[@pub-id-type='hwp']/text()\r\n        )[1]\r\n    </field>\r\n\r\n    <field name=\"journal-meta\" list=\"true\" type=\"structure\">\r\n        <structure context=\"nlm:journal-meta\">\r\n            <field name=\"journal-ta\">\r\n                nlm:journal-id[@journal-id-type='nlm-ta']/text()\r\n            </field>\r\n            <field name=\"journal-title\">\r\n              nlm:journal-title/text()\r\n            </field>\r\n            <field name=\"abbrev-journal-title-publisher\">\r\n              nlm:abbrev-journal-title[@abbrev-type='publisher']/text()\r\n            </field>\r\n            <field name=\"abbrev-journal-title-pubmed\">\r\n              nlm:abbrev-journal-title[@abbrev-type='pubmed']/text()\r\n            </field>\r\n            <field name=\"issn-ppub\">\r\n              nlm:issn[@pub-type='ppub']/text()\r\n            </field>\r\n            <field name=\"issn-epub\">\r\n              nlm:issn[@pub-type='epub']/text()\r\n            </field>\r\n            <field name=\"publisher-name\">\r\n              nlm:publisher/nlm:publisher-name/text()\r\n            </field>\r\n        </structure>\r\n    </field>\r\n\r\n    <field name=\"title\">atom:title[1]/node()</field>\r\n    <field name=\"title-short\">hwp:alt-title[@hwp:alt-title-type='short'][1]/node()</field>\r\n    <field name=\"subtitle\">atom:subtitle[1]/node()</field>\r\n\r\n    <field name=\"slug\">\r\n        (\r\n          nlm:pub-id[@hwp:sub-type='slug'][1]/text(),\r\n          nlm:object-id[@hwp:sub-type='slug'][1]/text()\r\n        )[1]\r\n    </field>\r\n\r\n    <field name=\"subtype\" list=\"true\">\r\n        for $uri in atom:category[@scheme='http://schema.highwire.org/Publishing#subtype']/@term return lower-case(tokenize($uri,'#')[last()])\r\n    </field>\r\n\r\n    <field name=\"variant-data\" list=\"true\" type=\"structure\">\r\n        <structure context=\"atom:link[@rel='alternate'][@type!='application/atom+xml; type=feed']\">\r\n            <field name=\"path\">@href</field>\r\n            <field name=\"lang\">@hreflang</field>\r\n            <field name=\"variant\">\r\n                if (matches(@c:role, \"http://schema.highwire.org/variant\"))\r\n                then replace(@c:role, \"http://schema.highwire.org/variant/\", \"\")\r\n                else ()\r\n            </field>\r\n            <field name=\"type\">@type</field>\r\n        </structure>\r\n    </field>\r\n\r\n    <field name=\"children\" list=\"true\">\r\n        atom:link[@href][@rel='http://schema.highwire.org/Compound#child']/@href\r\n    </field>\r\n\r\n    <field name=\"custom-meta\" list=\"true\" type=\"structure\" include-if=\"//nlm:custom-meta\">\r\n        <structure context=\"//nlm:custom-meta\">\r\n            <field name=\"name\">nlm:meta-name/node()</field>\r\n            <field name=\"value\">nlm:meta-value/node()</field>\r\n        </structure>\r\n    </field>\r\n\r\n    <field name=\"related\" list=\"true\" type=\"structure\">\r\n        <structure context=\"atom:link[@rel='related' or @rel='http://schema.highwire.org/Revision#correction' or @rel='http://schema.highwire.org/Revision#retraction' or @rel='http://schema.highwire.org/Revision#subject' or @rel='http://schema.highwire.org/Edition#highlight'][@c:role!='http://schema.highwire.org/ExternalLink']\">\r\n            <field name=\"apath\">@href</field>\r\n            <field name=\"type\">replace(@rel, \"http://schema.highwire.org/\", \"\")</field>\r\n            <field name=\"prop\">hwp:property/@href</field>\r\n            <field name=\"via\">@c:via</field>\r\n            <field name=\"title\">\r\n                if (exists(hwp:property)) \r\n                then doc(resolve-uri(hwp:property/@href,base-uri()))//atom:title/text() \r\n                else if (exists(doc(resolve-uri(@href,base-uri()))//atom:title[@type='xhtml'])) \r\n                then doc(resolve-uri(@href,base-uri()))//atom:title[@type='xhtml']/xhtml:div/node() \r\n                else doc(resolve-uri(@href,base-uri()))//atom:title/text()\r\n            </field>\r\n        </structure>\r\n    </field>\r\n\r\n    <field name=\"external-links\" list=\"true\" type=\"structure\">\r\n        <structure context=\"atom:link[@c:role='http://schema.highwire.org/ExternalLink']/node()[starts-with(@rel, 'http://schema.highwire.org/Linking/External')]\">\r\n            <field name=\"url\">@href</field>\r\n            <field name=\"title\">text()</field>\r\n            <field name=\"type\">@rel</field>\r\n        </structure>\r\n    </field>\r\n\r\n    <field name=\"parent\" include-if=\"not($atype = ('journal'))\">\r\n        atom:link[@href][@rel='http://schema.highwire.org/Compound#parent']/@href\r\n    </field>\r\n\r\n    <variable name=\"ancestry-uri\">\r\n        (atom:link[@rel='self']/resolve-uri(concat(@href, '?with-ancestors=yes'), base-uri(.)))[1]\r\n    </variable>\r\n\r\n    <variable name=\"book-parent\">\r\n        if ($atype-long = ('book-section', 'book-fragment'))\r\n        then\r\n        if (doc-available($ancestry-uri))\r\n        then doc($ancestry-uri)/atom:entry//c:parent[\r\n        atom:category[\r\n        @scheme eq 'http://schema.highwire.org/Publishing#role'\r\n        and @term eq 'http://schema.highwire.org/Book/Edition']]\r\n        else ()\r\n        else ()\r\n    </variable>\r\n\r\n    <field name=\"book-meta\" include-if=\"$atype-long = ('book-section') or $atype-long = ('book-fragment')\" list=\"true\" type=\"structure\">\r\n        <structure context=\"$book-parent\">\r\n            <field name=\"apath\">atom:link[@rel='self']/@href</field>\r\n            <field name=\"title\">atom:title/text()</field>\r\n            <field name=\"subtitle\">atom:subtitle/text()</field>\r\n            <field name=\"eisbn\">nlm:book-meta/nlm:isbn[@pub-type=\"epub\"]/text()</field>\r\n            <field name=\"isbn-cloth\">nlm:book-meta/nlm:isbn[@pub-type=\"cloth\"]/text()</field>\r\n            <field name=\"isbn-paper\">nlm:book-meta/nlm:isbn[@pub-type=\"paper\"]/text()</field>\r\n            <field name=\"publisher-name\">nlm:book-meta/nlm:publisher/nlm:publisher-name/text()</field>\r\n            <field name=\"tizra-url\">atom:link[@rel=\"http://schema.highwire.org/Linking/External#Tizra\"]/@href</field>\r\n            <field name=\"tizra-preview\">atom:link[@rel=\"http://schema.highwire.org/Linking/External#TizraPreview\"]/@href</field>\r\n        </structure>\r\n    </field>\r\n    <!-- Common to many records -->\r\n\r\n    <field name=\"volume\" include-if=\"exists(nlm:volume)\">\r\n        nlm:volume[1]/text()\r\n    </field>\r\n    <field name=\"issue\">\r\n       nlm:issue[1]/text()\r\n    </field>\r\n    <field name=\"issue-id\">\r\n        nlm:issue-id[@pub-id-type='display']/text()\r\n    </field>\r\n\r\n    <!-- to test for early release we need to check for two different variables which are both atom:category) -->\r\n    <!-- Rather than checking its own vairable, just check to see if the suppress exists - PB - 11/05/2013 -->\r\n    <field name=\"early-release\" type=\"boolean\">\r\n        exists(//atom:category[@scheme='http://schema.highwire.org/Journal/Article#is-early-release' and @term='yes'])\r\n        and\r\n        not(exists(//atom:category[@scheme='http://schema.highwire.org/Journal/Article#early-release-feed' and @term='suppress']))\r\n    </field>\r\n\r\n    <!-- START ATOM SERVER DATES -->\r\n    <field name=\"date-epreprint\" type=\"structure\">\r\n        <structure context=\"(nlm:pub-date[@pub-type='epreprint'],nlm:book-meta/nlm:pub-date[@pub-type='epreprint'])[1]\">\r\n            <field name=\"start\" data-type=\"date\">@hwp:start</field>\r\n            <field name=\"end\" data-type=\"date\">@hwp:end</field>\r\n            <field name=\"season\">nlm:season/text()</field>\r\n        </structure>\r\n    </field>\r\n    <field name=\"date-epub\" type=\"structure\">\r\n        <structure context=\"(nlm:pub-date[@pub-type='epub'],nlm:book-meta/nlm:pub-date[@pub-type='epub'])[1]\">\r\n            <field name=\"start\" data-type=\"date\">@hwp:start</field>\r\n            <field name=\"end\" data-type=\"date\">@hwp:end</field>\r\n            <field name=\"season\">nlm:season/text()</field>\r\n        </structure>\r\n    </field>    \r\n    <field name=\"date-epub-version\" type=\"structure\">\r\n        <structure context=\"(nlm:pub-date[@pub-type='epub-version'],nlm:book-meta/nlm:pub-date[@pub-type='epub-version'])[1]\">\r\n            <field name=\"start\" data-type=\"date\">@hwp:start</field>\r\n            <field name=\"end\" data-type=\"date\">@hwp:end</field>\r\n            <field name=\"season\">nlm:season/text()</field>\r\n        </structure>\r\n    </field>\r\n    <field name=\"date-epub-original\" type=\"structure\">\r\n        <structure context=\"(nlm:pub-date[@pub-type='epub-original'],nlm:book-meta/nlm:pub-date[@pub-type='epub-original'])[1]\">\r\n            <field name=\"start\" data-type=\"date\">@hwp:start</field>\r\n            <field name=\"end\" data-type=\"date\">@hwp:end</field>\r\n            <field name=\"season\">nlm:season/text()</field>\r\n        </structure>\r\n    </field>\r\n    <field name=\"date-epub-ppub\" type=\"structure\">\r\n        <structure context=\"(nlm:pub-date[@pub-type='epub-ppub'],nlm:book-meta/nlm:pub-date[@pub-type='epub-ppub'])[1]\">\r\n            <field name=\"start\" data-type=\"date\">@hwp:start</field>\r\n            <field name=\"end\" data-type=\"date\">@hwp:end</field>\r\n            <field name=\"season\">nlm:season/text()</field>\r\n        </structure>\r\n    </field>\r\n    <field name=\"date-ppub\" type=\"structure\">\r\n        <structure context=\"(nlm:pub-date[@pub-type='ppub'],nlm:book-meta/nlm:pub-date[@pub-type='ppub'])[1]\">\r\n            <field name=\"start\" data-type=\"date\">@hwp:start</field>\r\n            <field name=\"end\" data-type=\"date\">@hwp:end</field>\r\n            <field name=\"season\">nlm:season/text()</field>\r\n        </structure>\r\n    </field>\r\n    <field name=\"date-atom-published\" type=\"structure\">\r\n        <structure context=\"atom:published\">\r\n            <field name=\"start\" data-type=\"date\">text()</field>\r\n        </structure>\r\n    </field>\r\n    <field name=\"date-released\" type=\"structure\">\r\n        <structure context=\"r:released\">\r\n            <field name=\"start\" data-type=\"date\">text()</field>\r\n        </structure>\r\n    </field>\r\n    <field name=\"date-history\" type=\"structure\" list=\"true\">\r\n        <structure context=\"nlm:history/nlm:date\">\r\n            <field name=\"type\">@date-type</field>\r\n            <field name=\"start\" data-type=\"date\">@hwp:start</field>\r\n            <field name=\"end\" data-type=\"date\">@hwp:end</field>\r\n        </structure>\r\n    </field>\r\n    <!-- END ATOM SERVER DATES -->\r\n\r\n    <field name=\"fpage\">nlm:fpage[1]/text()</field>\r\n    <field name=\"lpage\">nlm:lpage[1]/text()</field>\r\n\r\n    <field name=\"physical-first-page\" include-if=\"$atype-long = ('book-section')\">\r\n        nlm:custom-meta-group/nlm:custom-meta[@specific-use='physical-pages' and nlm:meta-name/text() = 'fpage']/nlm:meta-value/text()\r\n    </field>\r\n\r\n    <field name=\"physical-last-page\" include-if=\"$atype-long = ('book-section')\">\r\n        nlm:custom-meta-group/nlm:custom-meta[@specific-use='physical-pages' and nlm:meta-name/text() = 'lpage']/nlm:meta-value/text()\r\n    </field>\r\n\r\n    <field name=\"elocation-id\">nlm:elocation-id/text()</field>\r\n\r\n    <field name=\"doi\">nlm:pub-id[@pub-id-type='doi'][1]/text()</field>\r\n\r\n    <field name=\"external-dois\" list=\"true\">\r\n        (atom:category[@scheme='http://schema.highwire.org/Linking/External' and @term='doi'][1]/node()/text())\r\n    </field>\r\n\r\n    <!-- <field name=\"external-dois\" list=\"true\" type=\"structure\" include-if=\"exists(atom:category[@scheme='http://schema.highwire.org/Linking/External' and @term='doi'])\">\r\n        <structure context=\"atom:category[@scheme='http://schema.highwire.org/Linking/External' and @term='doi']\">\r\n            <field name=\"doi\">xhtml:span/node()</field>\r\n        </structure>\r\n    </field> -->\r\n\r\n    <field name=\"pressrelease\">\r\n        (atom:link[@c:role='http://schema.highwire.org/variant/press-release'\r\n        and @rel='alternate']/@href)[1]\r\n    </field>\r\n\r\n    <field name=\"era\">\r\n        (atom:category[@scheme='http://schema.highwire.org/Publication/Content#era']/@term)[1]\r\n    </field>\r\n\r\n    <field name=\"enclosures\" list=\"true\" type=\"structure\" include-if=\"exists(atom:link[@rel='enclosure'])\">\r\n        <structure context=\"atom:link[@rel='enclosure']\">\r\n            <field name=\"path\">@href</field>\r\n            <field name=\"via\">@c:via</field>\r\n            <field name=\"mime-type\">@type</field>\r\n            <field name=\"title\" include-if=\"exists(@c:via)\">doc(resolve-uri(@c:via,base-uri()))//atom:title/text()</field>\r\n        </structure>\r\n    </field>\r\n\r\n    <field name=\"adjuncts\" include-if=\"$atype != ('adjunct')\" list=\"true\">\r\n        atom:link[@c:role='http://schema.highwire.org/Adjunct']/@href\r\n    </field>\r\n\r\n    <field name=\"georef-id\" include-if=\"$atype = ('article') or $atype = ('compilation') or $atype-long = ('book-edition') or $atype-long = ('book-section')\">\r\n        if (exists(atom:link/nlm:pub-id[@pub-id-type='georef'][1]/text()))\r\n        then  (atom:link/nlm:pub-id[@pub-id-type='georef'])[1]/text()\r\n        else if (exists(nlm:pub-id[@pub-id-type=\"georef-id\"]/text()))\r\n        then nlm:pub-id[@pub-id-type=\"georef-id\"]/text()\r\n        else ()\r\n    </field>\r\n\r\n    <field name=\"contributors-xml\" list=\"true\">\r\n        (atom:author, atom:contributor)\r\n    </field>\r\n\r\n    <!-- Journals Only -->\r\n\r\n    <field name=\"journal-publisher-id\" include-if=\"$atype = ('journal')\">\r\n        nlm:pub-id[@pub-id-type='publisher-id']/node()\r\n    </field>\r\n\r\n    <field name=\"journal-publisher\" include-if=\"$atype = ('journal')\">\r\n        atom:author/atom:name/node()\r\n    </field>\r\n\r\n    <field name=\"journal-abbrv-title\" include-if=\"$atype = ('journal')\">\r\n        nlm:journal-meta/nlm:abbrev-journal-title/text()\r\n    </field>\r\n\r\n    <field name=\"journal-eissn\" include-if=\"$atype = ('journal')\">\r\n        nlm:journal-meta/nlm:issn[@pub-type='epub']/node()\r\n    </field>\r\n\r\n    <field name=\"journal-pissn\" include-if=\"$atype = ('journal')\">\r\n        nlm:journal-meta/nlm:issn[@pub-type='ppub']/node()\r\n    </field>\r\n\r\n    <field name=\"journal-current-issue\" include-if=\"$atype = ('journal')\">\r\n        atom:link[@rel='http://schema.highwire.org/Edition#current']/@href\r\n    </field>\r\n\r\n\r\n    <field name=\"journal-issue-data\" list=\"true\" type=\"structure\" include-if=\"$atype = ('journal')\">\r\n        <structure context=\"atom:link[@rel='http://schema.highwire.org/Edition#current' or @rel='http://schema.highwire.org/Edition#recent' or @rel='http://schema.highwire.org/Edition#open' or @rel='http://schema.highwire.org/Edition#closed']\">\r\n            <field name=\"apath\">@href</field>\r\n            <field name=\"type\">replace(@rel, \"http://schema.highwire.org/Edition#\", \"\")</field>\r\n            <field name=\"closed-date\">\r\n                if (exists(r:closed))\r\n                then r:closed/text()\r\n                else ()\r\n            </field>\r\n            <field name=\"volume\">\r\n                if (exists(nlm:volume))\r\n                then nlm:volume/text()\r\n                else ()\r\n            </field>\r\n            <field name=\"issue\">\r\n                if (exists(nlm:issue))\r\n                then nlm:issue/text()\r\n                else ()\r\n            </field>\r\n        </structure>\r\n    </field>\r\n\r\n    <!-- Issues Only -->\r\n    <field name=\"issue-type\" include-if=\"$atype = ('issue')\">\r\n        if (exists(atom:link[@c:role='http://schema.highwire.org/Journal/Volume'][@rel='http://schema.highwire.org/Compound#parent']))\r\n        then 'print'\r\n        else 'batch'\r\n    </field>\r\n\r\n    <field name=\"issue-cover-image\" include-if=\"$atype = ('issue')\">\r\n        atom:link[@c:role='http://schema.highwire.org/variant/cover' and @rel='alternate' and @type != 'application/pdf']/@href[1]\r\n    </field>\r\n\r\n    <!-- If the issue is open, use the toc structure serivce to generate the toc.\r\n      (See JCORE-1187)  -->\r\n    <field name=\"issue-toc\" include-if=\"$atype = ('issue')\">\r\n        if (exists(//atom:category[@term='http://schema.highwire.org/Edition#open']))\r\n        then\r\n          if (doc-available($issue-toc-href-service))\r\n          then doc($issue-toc-href-service)\r\n          else()\r\n        else if (doc-available($issue-toc-href-sass))\r\n        then doc($issue-toc-href-sass)\r\n        else if(doc-available($issue-toc-href-service))\r\n        then doc($issue-toc-href-service)\r\n        else()\r\n    </field>\r\n\r\n    <field name=\"issue-editors-xml\" include-if=\"$atype = ('issue')\" list=\"true\">\r\n        atom:contributor\r\n    </field>\r\n\r\n    <field name=\"issue-title\" include-if=\"$atype = ('issue')\">nlm:issue-title[1]/node()</field>\r\n\r\n    <field name=\"issue-supplemental\" include-if=\"$atype = ('issue')\" type=\"boolean\">\r\n        exists(//atom:category[@scheme='http://schema.highwire.org/Publication/Content#is-supplemental' and @term='yes'])\r\n    </field>\r\n\r\n    <field name=\"issue-is-open\" type=\"boolean\" include-if=\"$atype= ('issue')\">\r\n        exists(//atom:category[@term='http://schema.highwire.org/Edition#open'])\r\n    </field>\r\n\r\n    <field name=\"issue-page-range\" include-if=\"$atype= ('issue')\">\r\n        (atom:category[@term='pagerange']/node()/text())[1]\r\n    </field>\r\n\r\n    <field name=\"issue-editors-html\" include-if=\"$atype= ('issue')\" list=\"true\">\r\n        (atom:category[@scheme='http://schema.highwire.org/Publication/Content#external' and @term='editors']/node())\r\n    </field>\r\n\r\n    <!-- Articles Only -->\r\n    <field name=\"article-authors-xml\" include-if=\"$atype = ('article') or $atype = ('compilation')\" list=\"true\">\r\n        (atom:author, atom:contributor)\r\n    </field>\r\n\r\n    <field name=\"article-on-behalf\" include-if=\"$atype = ('article') or $atype = ('compilation')\" list=\"true\">\r\n        (nlm:on-behalf-of)\r\n    </field>\r\n\r\n\r\n    <field name=\"article-type\" include-if=\"$atype = ('article') or $atype = ('compilation')\">@nlm:article-type</field>\r\n    <field name=\"article-pmid\" include-if=\"$atype = ('article') or $atype = ('compilation')\">nlm:article-id[@pub-id-type=\"pmid\"]/text()</field>\r\n    <field name=\"article-open-access\" type=\"boolean\" include-if=\"$atype = ('article') or $atype = ('compilation')\">exists(nlm:permissions/nlm:license[@license-type=\"open-access\"])</field>\r\n    <field name=\"article-permissions\" include-if=\"$atype = ('article') or $atype = ('compilation')\">nlm:permissions</field>\r\n\r\n    <field name=\"article-categories\" list=\"true\" type=\"structure\">\r\n        <structure context=\"nlm:article-categories//nlm:subject\" include-if=\"exists(text())\">\r\n            <field name=\"name\">*|text()</field>\r\n            <field name=\"type\" list=\"true\">ancestor::*/@subj-group-type</field>\r\n            <field name=\"content-type\">@content-type</field>\r\n        </structure>\r\n    </field>\r\n\r\n    <field name=\"article-keywords\" list=\"true\" type=\"structure\" include-if=\"$atype = ('article')  or $atype = ('compilation')\">\r\n        <structure context=\"nlm:kwd-group/nlm:kwd\">\r\n            <field name=\"name\">*|text()</field>\r\n            <field name=\"type\">../@kwd-group-type</field>\r\n        </structure>\r\n    </field>\r\n\r\n    <field name=\"article-series-title\" include-if=\"$atype = ('article')  or $atype = ('compilation')\" list=\"true\">\r\n        (nlm:article-categories/nlm:series-title/text())\r\n    </field>\r\n\r\n    <field name=\"article-corrections\" include-if=\"$atype = ('article') or $atype = ('compilation')\" list=\"true\">\r\n        atom:link\r\n        [@rel='http://schema.highwire.org/Revision#correction' or @rel='http://schema.highwire.org/Revision#retraction']\r\n        [@c:role='http://schema.highwire.org/Journal/Article']/@href\r\n    </field>\r\n    <field name=\"article-correction-subjects\" include-if=\"$atype = ('article') or $atype = ('compilation')\" list=\"true\">\r\n        atom:link[@rel='http://schema.highwire.org/Revision#subject'][\r\n        @c:role='http://schema.highwire.org/Journal/Article']/@href\r\n    </field>\r\n\r\n    <field name=\"article-version\" include-if=\"$atype = ('article') or $atype = ('compilation')\" type=\"boolean\">$article-version</field>\r\n    <field name=\"article-version-current\" include-if=\"$atype = ('article') or $atype = ('compilation')\" type=\"boolean\">\r\n        not(exists(atom:link[@rel=('http://schema.highwire.org/Revision#current', 'http://schema.highwire.org/Revision#next')][@c:role='http://schema.highwire.org/Journal/Article']))    </field>\r\n    <field name=\"article-version-head\" include-if=\"$article-version\">\r\n        atom:link[@rel='http://schema.highwire.org/Revision#current'][@c:role='http://schema.highwire.org/Journal/Article']/@href\r\n    </field>\r\n\r\n    <field name=\"collections\" list=\"true\" type=\"structure\" include-if=\"$article-collections-entry\">\r\n        <structure context=\"$article-collections-entry/atom:category[@scheme='http://schema.highwire.org/Collection#Hierarchy']\">\r\n            <field name=\"path\">@term</field>\r\n            <field name=\"id\" type=\"integer\">xs:decimal(collection:id/text())</field>\r\n            <field name=\"relevance\" type=\"float\">xs:decimal(collection:relevance/text())</field>\r\n            <field name=\"assigned\">collection:assigned/text()</field>\r\n        </structure>\r\n    </field>\r\n\r\n    <field name=\"funding-awards-groups\" list=\"true\" include-if=\"$atype = ('article')\">\r\n        nlm:funding-group/nlm:award-group\r\n    </field>\r\n\r\n    <field name=\"funding-statement\" list=\"true\" include-if=\"$atype = ('article')\">\r\n        nlm:funding-group/nlm:funding-statement\r\n    </field>\r\n\r\n    <field name=\"page-count\" include-if=\"$atype = ('article') or $atype = ('compilation')\">\r\n        (nlm:counts/nlm:page-count/@count)\r\n    </field>\r\n\r\n    <!-- Fragments Only -->\r\n\r\n    <!-- Fragment-type: We select the first Publishing#subtype as the connonical type for this fragment. This is usually `table` or `figure` -->\r\n    <field name=\"fragment-type\" include-if=\"$atype-long = ('journal-fragment') or $atype-long = ('book-fragment')\">\r\n        tokenize(lower-case(atom:category[@scheme='http://schema.highwire.org/Publishing#subtype'][1]/@term),'#')[last()]\r\n    </field>\r\n    <field name=\"fragment-summary\" include-if=\"$atype-long = ('journal-fragment') or $atype-long = ('book-fragment')\">\r\n        atom:summary/node()\r\n    </field>\r\n    <field name=\"fragment-image-thumbnail\" include-if=\"$atype-long = ('journal-fragment') or $atype-long = ('book-fragment')\">\r\n        (atom:link[@c:role='http://schema.highwire.org/variant/thumbnail']/@href)[1]\r\n    </field>\r\n    <field name=\"fragment-image-small\" include-if=\"$atype-long = ('journal-fragment') or $atype-long = ('book-fragment')\">\r\n        (atom:link[@c:role='http://schema.highwire.org/variant/small']/@href)[1]\r\n    </field>\r\n    <field name=\"fragment-image-medium\" include-if=\"$atype-long = ('journal-fragment') or $atype-long = ('book-fragment')\">\r\n        (atom:link[@c:role='http://schema.highwire.org/variant/medium']/@href)[1]\r\n    </field>\r\n    <field name=\"fragment-image-large\" include-if=\"$atype-long = ('journal-fragment') or $atype-long = ('book-fragment')\">\r\n        (atom:link[@c:role='http://schema.highwire.org/variant/large']/@href)[1]\r\n    </field>\r\n    <field name=\"fragment-image-poster\" include-if=\"$atype-long = ('journal-fragment') or $atype-long = ('book-fragment')\">\r\n        (atom:link[@rel='related'][@c:role='http://schema.highwire.org/variant/poster']/@href)[1]\r\n    </field>\r\n    <field name=\"fragment-keywords\" list=\"true\" type=\"structure\" include-if=\"$atype-long = ('journal-fragment') or $atype-long = ('book-fragment')\">\r\n        <structure context=\"nlm:kwd-group/nlm:kwd\">\r\n            <field name=\"name\">*|text()</field>\r\n            <field name=\"type\">../@kwd-group-type</field>\r\n        </structure>\r\n    </field>\r\n\r\n\r\n    <!-- Adjuncts Only -->\r\n\r\n    <field name=\"adjunct-type\" include-if=\"$atype = ('adjunct')\">$adjunct-type</field>\r\n\r\n    <field name=\"adjunct-subjects\" include-if=\"$atype = ('adjunct')\" list=\"true\">\r\n        atom:link[\r\n          @c:role='http://schema.highwire.org/Journal/Article' or\r\n          @c:role='http://schema.highwire.org/Journal/Issue' or\r\n          @c:role='http://schema.highwire.org/Journal/Fragment'\r\n        ]\r\n        [@type='application/atom+xml; type=entry']/@href\r\n    </field>\r\n\r\n    <field name=\"adjunct-files\" include-if=\"$atype = ('adjunct') and ($adjunct-type = ('container'))\" list=\"true\" type=\"structure\">\r\n      <structure context=\"atom:link[@c:role='http://schema.highwire.org/Adjunct']\">\r\n        <variable name=\"file-href\">@href</variable>\r\n        <field name=\"path\">$file-href</field>\r\n        <field name=\"title\">$adjunct-html-doc//xhtml:a[contains($file-href, @href)]/text()</field>\r\n        <field name=\"description\">$adjunct-html-doc//xhtml:a[contains($file-href, @href)]/following-sibling::text()</field>\r\n        <field name=\"adjunct\">@c:via</field>\r\n        <field name=\"pisa\">doc(resolve-uri(@c:via,base-uri()))//nlm:pub-id[@pub-id-type='other' and @hwp:sub-type='pisa'][1]/text()</field>\r\n        <field name=\"mime-type\">@type</field>\r\n      </structure>\r\n    </field>\r\n\r\n    <field name=\"adjunct-enclosures\" include-if=\"$atype = ('adjunct')\" list=\"true\">\r\n        atom:link[@c:role='http://schema.highwire.org/Adjunct'][@rel='enclosure']/@c:via\r\n    </field>\r\n\r\n    <field name=\"atom-collections\" list=\"true\" type=\"structure\" include-if=\"atom:category[contains(@scheme, '#publisher')]\">\r\n        <structure context=\"atom:category[starts-with(@scheme, 'http://atom-collections.highwire.org/')]\">\r\n            <field name=\"scheme\">@scheme</field>\r\n            <field name=\"term\">@term</field>\r\n            <field name=\"atomid\">atom:id</field>\r\n            <field name=\"label\" include-if=\"@label\">@label</field>\r\n        </structure>\r\n    </field>\r\n\r\n\r\n    <!-- Comments Only -->\r\n\r\n    <field name=\"comment-authors\" include-if=\"$atype = ('comment')\" list=\"true\">\r\n        (atom:author/atom:name/text(), atom:contributor/atom:name/text())\r\n    </field>\r\n\r\n    <field name=\"comment-authors-xml\" include-if=\"$atype = ('comment')\" list=\"true\">\r\n        (atom:author, atom:contributor)\r\n    </field>\r\n\r\n    <field name=\"comment-subject\" list=\"true\" include-if=\"$atype = ('comment')\">\r\n        atom:link[@rel='related'][@c:role='http://schema.highwire.org/Journal/Issue' or @c:role='http://schema.highwire.org/Journal/Article']/@href\r\n    </field>\r\n\r\n    <field name=\"comment-flag\" include-if=\"$atype = ('comment')\">\r\n        atom:category[@scheme='http://schema.highwire.org/Journal/Comment#flag']/@term\r\n    </field>\r\n\r\n    <field name=\"comment-html\" include-if=\"$atype = ('comment')\">\r\n        atom:link[@rel='http://schema.highwire.org/Publishing#edit-variant'][@c:role='http://schema.highwire.org/Publishing/default'][@type='application/xhtml+xml']/@href\r\n    </field>\r\n\r\n\r\n    <!-- Course/CME Only -->\r\n    <field name=\"course-id\" include-if=\"$atype = ('course')\">\r\n        nlm:pub-id[@pub-id-type='course-id'][1]/text()\r\n    </field>\r\n\r\n    <field name=\"program-code\" include-if=\"$atype = ('course')\">\r\n        nlm:pub-id[@pub-id-type='program-code'][1]/text()\r\n\r\n    </field>\r\n\r\n    <field name=\"date-experation\" type=\"structure\" include-if=\"$atype = ('course')\">\r\n        <structure context=\"nlm:pub-date[@pub-type='expiration'][1]\">\r\n            <field name=\"start\">@hwp:start</field>\r\n            <field name=\"end\">@hwp:end</field>\r\n            <field name=\"season\">nlm:season/text()</field>\r\n        </structure>\r\n    </field>\r\n\r\n    <field name=\"course-credits-count\" include-if=\"$atype = ('course')\">\r\n        atom:category[@scheme='http://schema.highwire.org/Course/Credit#metadata']/course:credits/@count\r\n    </field>\r\n\r\n    <field name=\"course-accreditation\" include-if=\"$atype = ('course')\">\r\n        atom:category[@scheme='http://schema.highwire.org/Course/Credit#metadata']/course:credits/text()\r\n    </field>\r\n\r\n    <field name=\"course-link\" include-if=\"$atype = ('course')\">\r\n        atom:link[\r\n            @rel='http://schema.highwire.org/Linking/External#Rievent' or\r\n            @rel='http://schema.highwire.org/Linking/External#CME'\r\n        ]/@href\r\n    </field>\r\n\r\n    <!-- Books and Book Editions -->\r\n    <field name=\"isbn\" include-if=\"$atype-long = ('book') or $atype-long = ('book-edition')\">\r\n        nlm:pub-id[@pub-id-type='isbn']/text()\r\n    </field>\r\n    <field name=\"isbn-paper\" include-if=\"$atype-long = ('book') or $atype-long = ('book-edition')\">\r\n        if (exists(nlm:book-meta/nlm:isbn[@pub-type='paper' and @specific-use='display']/text()))\r\n        then nlm:book-meta/nlm:isbn[@pub-type='paper' and @specific-use='display']/text()\r\n        else nlm:book-meta/nlm:isbn[@pub-type='paper']/text()\r\n    </field>\r\n    <field name=\"isbn-cloth\" include-if=\"$atype-long = ('book') or $atype-long = ('book-edition')\">\r\n        if (exists(nlm:book-meta/nlm:isbn[@pub-type='cloth' and @specific-use='display']/text()))\r\n        then nlm:book-meta/nlm:isbn[@pub-type='cloth' and @specific-use='display']/text()\r\n        else nlm:book-meta/nlm:isbn[@pub-type='cloth']/text()\r\n    </field>\r\n    <field name=\"eisbn\" include-if=\"$atype-long = ('book') or $atype-long = ('book-edition')\">\r\n        if (exists(nlm:book-meta/nlm:isbn[@pub-type='epub' and @specific-use='display']/text()))\r\n        then nlm:book-meta/nlm:isbn[@pub-type='epub' and @specific-use='display']/text()\r\n        else nlm:book-meta/nlm:isbn[@pub-type='epub']/text()\r\n    </field>\r\n    <field name=\"book-title-group\" include-if=\"$atype-long = ('book') or $atype-long = ('book-edition')\">\r\n        nlm:book-meta/nlm:book-title-group\r\n    </field>\r\n    <field name=\"book-eissn\" include-if=\"$atype-long = ('book') or $atype-long = ('book-edition')\">\r\n        nlm:pub-id[@pub-id-type='issn-epub']/text()\r\n    </field>\r\n\r\n    <field name=\"book-pissn\" include-if=\"$atype-long = ('book') or $atype-long = ('book-edition')\">\r\n        nlm:pub-id[@pub-id-type='issn-ppub']/text()\r\n    </field>\r\n\r\n    <field name=\"page-count\" include-if=\"$atype-long = ('book') or $atype-long = ('book-edition')\">\r\n        nlm:book-meta/nlm:counts/nlm:page-count/@count\r\n    </field>\r\n\r\n    <!-- Book Editions -->\r\n\r\n    <field name=\"book-edition-cover-images\" list=\"true\" include-if=\"$atype-long = ('book-edition')\">\r\n        atom:link[@c:role='http://schema.highwire.org/variant/cover-source' and @rel='alternate']/@href\r\n    </field>\r\n\r\n    <field name=\"series\" include-if=\"$atype-long = ('book-edition')\" list=\"true\">\r\n        nlm:book-meta/nlm:series/text()\r\n    </field>\r\n\r\n    <field name=\"book-author-comments-xml\" include-if=\"$atype-long = ('book-edition')\" list=\"true\">\r\n        //nlm:author-comment\r\n    </field>\r\n\r\n    <!-- book edition -->\r\n    <!-- related works as parsed from the recommendations service. currently this only comes -->\r\n    <!-- in XML form, so we're going to handle it as a list here. -->\r\n    <!--\r\n    <variable name=\"book-edition-related-works\" include-if=\"$atype-long = ('book-edition')\">\r\n        doc(concat('http://recommendations-alpha.highwire.org/like/content',$apath,'?scope=books',$apath))\r\n    </variable>\r\n\r\n    <field name=\"related-works\" list=\"true\" include-if=\"$atype-long = ('book-edition')\">\r\n        $book-edition-related-works//atom:entry/atom:link/@href\r\n    </field>\r\n    -->\r\n    <!-- end book edition related works -->\r\n\r\n    <field name=\"book-permissions\" include-if=\"$atype-long = ('book-edition')\">\r\n        nlm:book-meta/nlm:permissions\r\n    </field>\r\n\r\n    <field name=\"book-volume\" include-if=\"$atype-long = ('book-edition')\">\r\n        nlm:book-meta/nlm:volume/text()\r\n    </field>\r\n\r\n    <field name=\"book-edition\" include-if=\"$atype-long = ('book-edition')\">\r\n        nlm:book-meta/nlm:edition/text()\r\n    </field>\r\n\r\n    <field name=\"book-edition\" include-if=\"$atype-long = ('book-edition')\">\r\n        nlm:book-meta/nlm:edition/text()\r\n    </field>\r\n\r\n    <field name=\"tizra-href\" include-if=\"$atype-long = ('book-edition')\">\r\n        atom:link[@rel='http://schema.highwire.org/Linking/External#Tizra']/@href[1]\r\n    </field>\r\n\r\n    <field name=\"tizra-preview\" include-if=\"$atype-long = ('book-edition')\">\r\n        atom:link[@rel='http://schema.highwire.org/Linking/External#TizraPreview']/@href[1]\r\n    </field>\r\n\r\n    <field name=\"book-alt-title\" include-if=\"$atype-long = ('book-edition')\">\r\n        nlm:book-meta/nlm:book-title-group/nlm:alt-title/text()\r\n    </field>\r\n\r\n    <field name=\"book-publisher\" include-if=\"$atype-long = ('book-edition')\" list=\"true\">\r\n        nlm:book-meta/nlm:publisher/nlm:publisher-name/text()\r\n    </field>\r\n\r\n    <!-- Book Sections -->\r\n    <field name=\"book-part-categories\" list=\"true\" type=\"structure\">\r\n        <structure context=\"nlm:book-part-categories//nlm:subject\" include-if=\"exists(text())\">\r\n            <field name=\"name\">text()</field>\r\n            <field name=\"type\" list=\"true\">ancestor::*/@subj-group-type</field>\r\n            <field name=\"content-type\">@content-type</field>\r\n        </structure>\r\n    </field>\r\n\r\n    <field name=\"book-section-part-type\" include-if=\"$atype-long = ('book-section')\">\r\n        atom:category[@scheme=\"http://schema.highwire.org/Book/Section#part-type\"]/@term\r\n    </field>\r\n\r\n    <!-- GeoRef record -->\r\n    <field name=\"publisher-name\" include-if=\"$atype = ('georef')\">\r\n        nlm:publisher/nlm:publisher-name/text()\r\n    </field>\r\n\r\n    <field name=\"georef-bibliographic-level\" include-if=\"$atype = ('georef')\">\r\n        atom:category[@scheme='http://schema.highwire.org/Data/Georef#bibliographic-level']/@term\r\n    </field>\r\n\r\n    <field name=\"georef-document-type\" include-if=\"$atype = ('georef')\" list=\"true\">\r\n        atom:category[@scheme='http://schema.highwire.org/Data/Georef#document-type']/@term\r\n    </field>\r\n\r\n    <field name=\"georef-document-in-process\" include-if=\"$atype = ('georef')\" type=\"boolean\">\r\n        exists(atom:category[@scheme='http://schema.highwire.org/Data/Georef#in-process'])\r\n    </field>\r\n\r\n    <field name=\"georef-ip\" include-if=\"$atype = ('georef')\">\r\n        nlm:pub-id[@pub-id-type='georef-ip']/text()\r\n    </field>\r\n\r\n    <field name=\"georef-id\" include-if=\"$atype = ('georef')\">\r\n      nlm:pub-id[@pub-id-type=\"georef\"]/text()\r\n    </field>\r\n\r\n    <!-- Sigtrans DBCS -->\r\n\r\n    <!-- To fetch Resource Type for Pathway, Node, Component and Relation -->\r\n    <variable name=\"resource-type-long\" include-if=\"$atype = ('resource')\">\r\n        lower-case(atom:category[@scheme='urn:org.highwire:external:resource']/@term)\r\n    </variable>\r\n\r\n    <variable name=\"resource-type\" include-if=\"$atype = ('resource')\">\r\n        tokenize($resource-type-long,'-')[last()]\r\n    </variable>\r\n    <!-- To fetch Resource Type for Pathway, Node, Component and Relation -->\r\n\r\n    <field name=\"resource-type-long\">$resource-type-long</field>\r\n\r\n    <field name=\"resource-type\">$resource-type</field>\r\n\r\n    <!-- Resource Only -->\r\n    <field name=\"resource-summary\" include-if=\"$atype = ('resource')\">atom:summary/node()</field>\r\n\r\n    <field name=\"resource-authors\" include-if=\"$atype = ('resource')\" list=\"true\">\r\n        (atom:author/atom:name/text(), atom:contributor/atom:name/text())\r\n    </field>\r\n\r\n    <field name=\"resource-authors-xml\" include-if=\"$atype = ('resource')\" list=\"true\">\r\n        (atom:author, atom:contributor)\r\n    </field>\r\n\r\n    <field name=\"resource-title-alt-abbr\" include-if=\"($atype = ('resource'))\">\r\n        hwp:alt-title[@hwp:alt-title-type='abbrev']/text()\r\n    </field>\r\n\r\n    <!-- Node Only -->\r\n    <field name=\"resource-component-id\" include-if=\"$resource-type = ('node')\">\r\n        nlm:pub-id[@pub-id-type='other' and @hwp:sub-type='component-id'][1]/text()\r\n    </field>\r\n\r\n    <field name=\"resource-node-connection-map-type\"  include-if=\"$resource-type = ('node')\">\r\n        lower-case(atom:category[@scheme='urn:org.highwire:connections-map-node:type']/@term)\r\n    </field>\r\n\r\n    <!-- Node and Relation Only -->\r\n    <field name=\"resource-path-id\" include-if=\"($resource-type = ('node')) or ($resource-type = ('relation'))\">\r\n        nlm:pub-id[@pub-id-type='other' and @hwp:sub-type='path-id'][1]/text()\r\n    </field>\r\n\r\n    <!-- Relation Only -->\r\n    <field name=\"resource-relation-connection-map-type\"  include-if=\"$resource-type = ('relation')\">\r\n        lower-case(atom:category[@scheme='urn:org.highwire:connections-map-relation:type']/@term)\r\n    </field>\r\n\r\n    <field name=\"resource-relation-object-source-id\" include-if=\"$resource-type = ('relation')\">\r\n        nlm:object-id[@pub-id-type='other' and @hwp:sub-type='source-id'][1]/text()\r\n    </field>\r\n\r\n    <field name=\"resource-relation-object-target-id\" include-if=\"$resource-type = ('relation')\">\r\n        nlm:object-id[@pub-id-type='other' and @hwp:sub-type='target-id'][1]/text()\r\n    </field>\r\n\r\n    <!-- Component Only -->\r\n    <field name=\"resource-component-connections-map-type\"  include-if=\"$resource-type = ('component')\">\r\n        lower-case(atom:category[@scheme='urn:org.highwire:connections-map-component:type']/@term)\r\n    </field>\r\n\r\n    <field name=\"resource-component-connections-map-collection-type\"  include-if=\"($resource-type = ('component'))\">\r\n        lower-case(atom:category[@scheme='urn:org.highwire:connections-map-component:collection:type']/@term)\r\n    </field>\r\n\r\n    <field name=\"resource-component-connections-map-collection-model-organism\"  include-if=\"($resource-type = ('component'))\">\r\n        lower-case(atom:category[@scheme='urn:org.highwire:connections-map-component:collection:model-organism']/@term)\r\n    </field>\r\n\r\n    <!-- Pathway Only -->\r\n    <field name=\"resource-pathway-connection-map-type\"  include-if=\"$resource-type = ('pathway')\">\r\n        lower-case(atom:category[@scheme='urn:org.highwire:connections-map-pathway:type']/@term)\r\n    </field>\r\n\r\n    <field name=\"resource-pathway-connections-map-collection-model-organism\"  include-if=\"($resource-type = ('pathway'))\">\r\n        lower-case(atom:category[@scheme='urn:org.highwire:connections-map-pathway:collection:model-organism']/@term)\r\n    </field>\r\n\r\n    <!-- News Story Only -->\r\n    <field name=\"news-story-type\"  include-if=\"$atype-long = ('news-story')\">\r\n        lower-case(atom:category[@scheme='http://schema.highwire.org/News/Story#story-type']/@term)\r\n    </field>\r\n    <field name=\"news-story-publisher-slug\"  include-if=\"$atype-long = ('news-story')\">\r\n        //nlm:pub-id[@pub-id-type=\"publisher\"]/text()\r\n    </field>\r\n    <field name=\"news-story-summary\"  include-if=\"$atype-long = ('news-story')\">\r\n        atom:summary/node()\r\n    </field>\r\n\r\n    <!-- DEPRICATED -->\r\n\r\n    <!-- metadata-doc variable is now DEPRICATED -->\r\n    <variable name=\"metadata-doc\">\r\n        if ($atype = ('article') or $atype = ('compilation'))\r\n        then\r\n          if (doc-available(concat('http://markup.highwire.org/metadata',$apath)))\r\n          then doc(concat('http://markup.highwire.org/metadata',$apath))\r\n          else ()\r\n        else ()\r\n    </variable>\r\n\r\n    <!--DEPRECATED 4/13/2012 -->\r\n    <field name=\"date-published\">atom:published[1]/text()</field>\r\n    <field name=\"date-edited\">atom:edited[1]/text()</field>\r\n    <field name=\"date-updated\">atom:updated[1]/text()</field>\r\n    <field name=\"date-created\">atom:created[1]/text()</field>\r\n    <field name=\"date-received\">atom:received[1]/text()</field>\r\n\r\n    <!--DEPRECATED 4/13/2012 -->\r\n    <field name=\"variants\" list=\"true\">\r\n        for $var in (atom:link[@rel=\"alternate\"][@type='application/xhtml+xml']/@c:role)\r\n        return\r\n        if (matches($var, \"http://schema.highwire.org/variant\"))\r\n        then replace($var, \"http://schema.highwire.org/variant/\", \"\")\r\n        else ()\r\n    </field>\r\n\r\n    <!-- START MARKUP SERVER DATES -->\r\n    <!--DEPRECATED 4/13/2012 -->\r\n    <field name=\"epubdate\" type=\"structure\" include-if=\"exists($metadata-doc)\">\r\n        <structure context=\"$metadata-doc//metadata:date[@type='online this-version']\">\r\n            <field name=\"start\">@start</field>\r\n            <field name=\"end\">@end</field>\r\n        </structure>\r\n    </field>\r\n\r\n    <!--DEPRECATED 4/13/2012 -->\r\n    <field name=\"ppubdate\" type=\"structure\" include-if=\"exists($metadata-doc)\">\r\n        <structure context=\"$metadata-doc//metadata:date[@type='print']\">\r\n            <field name=\"start\">@start</field>\r\n            <field name=\"end\">@end</field>\r\n        </structure>\r\n    </field>\r\n\r\n    <!--DEPRECATED 4/13/2012 -->\r\n    <field name=\"fpubdate\" type=\"structure\" include-if=\"exists($metadata-doc)\">\r\n        <structure context=\"$metadata-doc//metadata:date[@type='online first-version']\">\r\n            <field name=\"start\">@start</field>\r\n            <field name=\"end\">@end</field>\r\n        </structure>\r\n    </field>\r\n\r\n    <!-- END MARKUP SERVER DATES -->\r\n\r\n    <!--DEPRECATED 11/01/2012 -->\r\n    <field name=\"cpath-alias\" list=\"true\" include-if=\"exists($metadata-doc)\">\r\n        $metadata-doc//metadata:urls/metadata:url/@href\r\n    </field>\r\n\r\n    <!--DEPRECATED 4/13/2012 -->\r\n    <field name=\"article-authors\" include-if=\"$atype = ('article') or $atype = ('compilation')\" list=\"true\">\r\n        (atom:author[@nlm:contrib-type='author']/atom:name/text(),\r\n        atom:contributor[@nlm:contrib-type='author']/atom:name/text())\r\n    </field>\r\n\r\n    <!--DEPRECATED 4/13/2012 -->\r\n    <field name=\"article-subhead-plain\" include-if=\"$atype = ('article') or $atype = ('compilation')\" list=\"true\">\r\n        nlm:article-categories//nlm:subj-group[@subj-group-type=\"heading\" and not(descendant::nlm:subj-group)]/nlm:subject/text()\r\n    </field>\r\n\r\n    <!--DEPRECATED 4/13/2012 -->\r\n    <field name=\"article-subhead-singular\" include-if=\"$atype = ('article') or $atype = ('compilation')\" list=\"true\">\r\n        nlm:article-categories/nlm:subj-group[@subj-group-type=\"heading\"]/nlm:subj-group[@subj-group-type=\"display-group\"]/nlm:subject[@content-type=\"display-singular\"]/text()\r\n    </field>\r\n\r\n    <!--DEPRECATED 4/13/2012 -->\r\n    <field name=\"article-subhead-plural\" include-if=\"$atype = ('article') or $atype = ('compilation')\" list=\"true\">\r\n        nlm:article-categories/nlm:subj-group[@subj-group-type=\"heading\"]/nlm:subj-group[@subj-group-type=\"display-group\"]/nlm:subject[@content-type=\"display-plural\"]/text()\r\n    </field>\r\n\r\n    <!--DEPRECATED 4/13/2012 -->\r\n    <field name=\"article-subhead-plural\" include-if=\"$atype = ('article') or $atype = ('compilation')\" list=\"true\">\r\n        nlm:article-categories/nlm:subj-group[@subj-group-type=\"heading\"]/nlm:subj-group[@subj-group-type=\"display-group\"]/nlm:subject[@content-type=\"display-plural\"]/text()\r\n    </field>\r\n\r\n    <!--DEPRECATED 4/13/2012 -->\r\n    <field name=\"article-subhead-plural\" include-if=\"$atype = ('article') or $atype = ('compilation')\" list=\"true\">\r\n        nlm:article-categories/nlm:subj-group[@subj-group-type=\"heading\"]/nlm:subj-group[@subj-group-type=\"display-group\"]/nlm:subject[@content-type=\"display-plural\"]/text()\r\n    </field>\r\n\r\n    <!--DEPRECATED 4/13/2012 -->\r\n    <field name=\"article-subhead-plural\" include-if=\"$atype = ('article') or $atype = ('compilation')\" list=\"true\">\r\n        nlm:article-categories/nlm:subj-group[@subj-group-type=\"heading\"]/nlm:subj-group[@subj-group-type=\"display-group\"]/nlm:subject[@content-type=\"display-plural\"]/text()\r\n    </field>\r\n\r\n    <!--DEPRECATED 4/13/2012 -->\r\n    <field name=\"article-subhead-plural\" include-if=\"$atype = ('article') or $atype = ('compilation')\" list=\"true\">\r\n        nlm:article-categories/nlm:subj-group[@subj-group-type=\"heading\"]/nlm:subj-group[@subj-group-type=\"display-group\"]/nlm:subject[@content-type=\"display-plural\"]/text()\r\n    </field>\r\n\r\n    <!--DEPRECATED 4/13/2012 -->\r\n    <field name=\"article-full-pdf\">(atom:link[@href][@rel=\"alternate\"][\r\n        @type=\"application/pdf\"][\r\n        @c:role=\"http://schema.highwire.org/variant/full-text\"]/@href)[1]\r\n    </field>\r\n\r\n    <!--DEPRECATED 4/13/2012 -->\r\n    <field name=\"article-abri-pdf\">(atom:link[@href][@rel=\"alternate\"][\r\n        @type=\"application/pdf\"][\r\n        @c:role=\"http://schema.highwire.org/variant/abridgement\"]/@href)[1]\r\n    </field>\r\n\r\n    <!--DEPRECATED 4/13/2012 -->\r\n    <field name=\"article-collections\" list=\"true\" type=\"integer\">\r\n        $article-collections-entry/atom:category[@scheme='http://schema.highwire.org/Collection#Hierarchy']/xs:decimal(collection:id/text())\r\n    </field>\r\n\r\n    <!--DEPRECATED 4/19/2012 -->\r\n    <field name=\"article-related\" include-if=\"$atype = ('article') or $atype = ('compilation')\" list=\"true\">\r\n        atom:link[@rel='related'][\r\n        @c:role='http://schema.highwire.org/Journal/Article']/@href\r\n    </field>\r\n\r\n    <!--DEPRECATED 2013-04-19. See new \"adjuncts\" field. -->\r\n    <field name=\"article-adjuncts\" include-if=\"$atype = ('article') or $atype = ('compilation')\" list=\"true\">\r\n        atom:link[@c:role='http://schema.highwire.org/Adjunct']/@href\r\n    </field>\r\n\r\n</policy>\r\n\r\n",
"signature": "a9480e55204cf384045ba661fc3921a3",
"mimeTypes": [
"application/vnd.hw.ac.resource+json"
],
"newMimeType": null,
"corpusList": [
"testCorpus"
],
"newCorpus": null,
"updatedDate": 1496238346785,
"enable": false,
"ignorePaths": null,
"inclusionPaths": null,
"new": false,
"id": "731aa190-4607-11e7-93b7-1195de1ee295"
},
{
"policyId": "jats-preview-xhtml",
"name": "JATSPreviewXHTML",
"policyType": "xslt",
"url": "http://staticfs.highwire.org/content-systems-dev/test/JATSPreviewStylesheets/shells/saxon/convert.atom-bits-xhtml.xsl",
"format": "xml",
"source": "<xsl:stylesheet version=\"2.0\"\n  xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"\n  xmlns:atom=\"http://www.w3.org/2005/Atom\"\n  xmlns:c=\"http://schema.highwire.org/Compound\"\n  xmlns:saxon=\"http://saxon.sf.net/\"\n  exclude-result-prefixes=\"#all\">\n  \n  <xsl:output method=\"xhtml\" omit-xml-declaration=\"no\"\n    encoding=\"utf-8\" indent=\"no\"\n    doctype-public=\"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n    doctype-system=\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"/>\n\n  \n  <xsl:param name=\"runtime-params\">\n    <base-dir>\n      <xsl:value-of\n        select=\"replace(base-uri(/), '/[^/]+$','')\"/>     \n    </base-dir>\n  </xsl:param>\n  \n  <xsl:template match=\"/\">\n    <xsl:choose>\n      <xsl:when test=\"atom:entry\">\n        <xsl:variable name=\"source\" as=\"document-node()\" select=\"doc(resolve-uri(atom:entry/atom:link[@rel eq 'alternate'][@c:role eq 'http://schema.highwire.org/variant/source'][@type eq 'application/xml']/@href,base-uri(.)))\"/>\n        <!-- format citations in NLM/PMC format -->\n        <xsl:variable name=\"step1\" as=\"document-node()\"\n          select=\"\n          saxon:transform(\n          saxon:compile-stylesheet(doc('../../xslt/citations-prep/jats-PMCcit.xsl')),\n          $source,\n          $runtime-params/* )\"/>\n        <!-- convert into HTML for display -->\n        <xsl:variable name=\"step2\" as=\"document-node()\"\n          select=\"\n          saxon:transform(\n          saxon:compile-stylesheet(doc('../../xslt/main/jats-html.xsl')),\n          $step1,\n          $runtime-params/* )\"/>\n        <!-- cast into XHTML namespace\n           (for example, if MathML is included)\n         if this step is run, the output file should be\n           named with suffix .xml or .xhtml, and served\n           with MIME type application/xhtml+xml -->\n        <xsl:variable name=\"step3\" as=\"document-node()\"\n          select=\"\n          saxon:transform(\n          saxon:compile-stylesheet(doc('../../xslt/post/xhtml-ns.xsl')),\n          $step2,\n          $runtime-params/* )\"/>\n        <xsl:sequence select=\"$step3\"/>\n      </xsl:when>\n      <xsl:otherwise>\n        <xsl:apply-imports/>\n      </xsl:otherwise>\n    </xsl:choose>\n  </xsl:template>\n  \n</xsl:stylesheet>",
"signature": "7ec192fa5a05afd39bd844b2d85a485c",
"mimeTypes": [
"application/xhtml+xml"
],
"newMimeType": null,
"corpusList": [
"freebird2"
],
"newCorpus": null,
"updatedDate": 1493841234907,
"enable": false,
"ignorePaths": null,
"inclusionPaths": null,
"new": false,
"id": "3d145ab0-303a-11e7-b647-1195de1ee295"
},
{
"policyId": "item-bits",
"name": "item-bits",
"policyType": "siena",
"url": "http://staticfs.highwire.org/a4d-extract-dev/policies/item-bits/definition.xml",
"format": "json/xml",
"source": "<?xml-model href=\"http://staticfs.highwire.org/content-systems/xml-schema/extract/policy.rnc\"?>\n<?xml-model href=\"http://staticfs.highwire.org/content-systems/xml-schema/extract/policy.sch\"?>\n\n<!-- item-bits -->\n<policy xmlns=\"http://schema.highwire.org/DataExtract\"\n    xmlns:atom=\"http://www.w3.org/2005/Atom\"\n    xmlns:nlm=\"http://schema.highwire.org/NLM/Journal\"\n    xmlns:hwp=\"http://schema.highwire.org/Journal\"\n    xmlns:c=\"http://schema.highwire.org/Compound\"\n    xmlns:xhtml=\"http://www.w3.org/1999/xhtml\"\n    xmlns:collection=\"http://schema.highwire.org/Collection\"\n    xmlns:metadata=\"http://schema.highwire.org/Service/Metadata\"\n    xmlns:r=\"http://schema.highwire.org/Revision\"\n    xmlns:course=\"http://schema.highwire.org/Course\"\n    xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n    context=\"/atom:entry\" \n    name=\"item-bits\" \n    id-field=\"apath\" \n    corpus-field=\"corpus\"\n    type-field=\"item-type\">\n    \n    <!-- Variables -->\n    <variable name=\"environment\">\n        if (contains(/atom:entry/@xml:base, \"sass-alpha\") or contains(/atom:entry/@xml:base, \"sass-dev\"))\n        then \"development\"\n        else \"production\"\n    </variable>\n    \n    <variable name=\"baseurl\">\n        if ($environment = ('production')) then\n        'http://sass.highwire.org'\n        else\n        'http://sass-alpha.highwire.org'\n    </variable>\n    \n    <variable name=\"corpus\">'freebird-bits'</variable>\n    \n    <variable name=\"apath\">\n        (atom:link[@rel='self']/@href)[1]\n    </variable>\n    \n    <variable name=\"role\">\n        atom:category[@scheme eq 'http://schema.highwire.org/Publishing#role']/@term\n    </variable>\n    \n    <variable name=\"itemset-role\">'http://schema.highwire.org/ItemSet'</variable>\n    \n    <variable name=\"type\">\n        if ($role eq $itemset-role)\n        then 'itemset'\n        else concat('item-',(atom:category[@scheme eq 'http://schema.highwire.org/ItemSet/Item#type']/@term)[1])\n    </variable>\n    \n    <variable name=\"parent\">atom:link[@href][@rel='http://schema.highwire.org/Compound#parent']/@href</variable>\n    \n    <variable name=\"source\">\n        if (exists(atom:link[@c:role='http://schema.highwire.org/variant/source'][@rel='alternate']))\n        then \n        doc(concat($baseurl,atom:link[@c:role='http://schema.highwire.org/variant/source'][@rel='alternate']/@href))\n        else ()\n    </variable>\n    \n    <!-- Atom fields -->\n    <field name=\"apath\">$apath</field>\n    <field name=\"corpus\">$corpus</field>\n    <field name=\"item-type\">$type</field>\n    <field name=\"title\" elastic-type=\"short\">atom:title/text()</field>\n    \n    <!-- Dates -->\n    <field name=\"date-atom-updated\" elastic-type=\"date\" drupal-type=\"datetime\">xs:dateTime(atom:updated)</field>\n    <field name=\"date-atom-release\" elastic-type=\"date\" drupal-type=\"datetime\">xs:dateTime(r:released)</field>\n    <!-- END Dates -->\n    \n    <field name=\"parent\" include-if=\"not($parent = ('/svc.atom'))\">$parent</field>\n    <field name=\"children\" list=\"true\">\n        atom:link[@href][@rel='http://schema.highwire.org/Compound#child']/@href\n    </field>\n    \n    <!-- Bit source fields -->\n    <field name=\"type-id\">$source/*/@id</field>\n    <field name=\"book-part-type\">$source/*/@book-part-type</field>\n    <field name=\"doi\">\n        if (exists($source/*/book-part-meta/book-part-id[@book-part-id-type='doi']/text()))\n        then\n        $source/book-part/book-part-meta/book-part-id[@book-part-id-type='doi']/text()\n        else if(exists($source/*/book-meta/book-id[@book-id-type='doi']/text()))\n        then\n        $source/book/book-meta/book-id[@book-id-type='doi']/text()\n        else()\n    </field>\n    <field name=\"fpage\">$source/*/book-part-meta/fpage/text()</field>\n    <field name=\"lpage\">$source/*/book-part-meta/lpage/text()</field>\n    \n    <field name=\"supplementary-material\" list=\"true\" type=\"structure\" include-if=\"exists($source/*/book-part-meta/supplementary-material)\">\n        <structure context=\"$source/*/book-part-meta/supplementary-material\">\n            <field name=\"title\">@xlink:title</field>\n            <field name=\"href\">@xlink:href</field>\n            <field name=\"mime-type\">@mimetype</field>\n        </structure>\n    </field>\n    \n    <field name=\"contributors-xml\" list=\"true\">\n        (atom:author, atom:contributor)\n    </field>\n    \n    <field name=\"subject-groups\" list=\"true\" type=\"structure\" include-if=\"exists($source/book/book-meta//subj-group)\">\n        <structure context=\"$source/book/book-meta//subj-group\">\n            <field name=\"name\">subject/text()</field>\n            <field name=\"type\" list=\"true\">@subj-group-type</field>\n            <field name=\"content-type\">@content-type</field>\n        </structure>\n    </field>\n    \n    <field name=\"isbn-print\">$source/book/book-meta/isbn[@publication-format='print']/text()</field>\n    <field name=\"isbn-ebook\">$source/book/book-meta/isbn[@publication-format='ebook']/text()</field>\n    \n    <field name=\"publisher\" list=\"true\" type=\"structure\" include-if=\"exists($source/book/book-meta/publisher)\">\n        <structure context=\"$source/book/book-meta/publisher\">\n            <field name=\"name\">publisher-name/text()</field>\n            <field name=\"location\">publisher-loc/text()</field>\n        </structure>\n    </field>\n    \n    <field name=\"edition\">$source/book/book-meta/edition/text()</field>\n    <field name=\"permissions\">$source/book/book-meta/permissions</field>\n    \n    \n    <field name=\"keywords\" list=\"true\" type=\"structure\" include-if=\"exists($source/book-part/book-part-meta/kwd-group/kwd | $source/book/book-meta/kwd-group/kwd)\">\n        <structure context=\"($source/book-part/book-part-meta/kwd-group/kwd | $source/book/book-meta/kwd-group/kwd)\">\n            <field name=\"name\">*|text()</field>\n            <field name=\"type\">../@kwd-group-type</field>\n        </structure>\n    </field>\n    \n    <field name=\"counts\" list=\"true\" type=\"structure\" drupal-type=\"double_field\" include-if=\"exists($source/book/book-meta/counts)\">\n        <structure context=\"$source/book/book-meta/counts/*\">\n            <field name=\"first\">name()</field>\n            <field name=\"second\">@count</field>\n        </structure>\n    </field>\n    <field name=\"disclaimer\">$source/book/book-meta/notes[@notes-type='disclaimer']/*</field>\n</policy>",
"signature": "c851ee9fce2d93b79836b856a13bd53e",
"mimeTypes": [
"application/vnd.hw.item-bits+json"
],
"newMimeType": null,
"corpusList": [
"freebird2"
],
"newCorpus": null,
"updatedDate": 1494871158393,
"enable": false,
"ignorePaths": null,
"inclusionPaths": null,
"new": false,
"id": "37509690-3998-11e7-973b-1195de1ee295"
},
{
"policyId": "generic-xhtml",
"name": "Generic xhtml",
"policyType": "xslt",
"url": "http://staticfs.highwire.org/content-systems/xml-tech/publishing/source/convert.source-xhtml.xsl",
"format": "xml",
"source": "<xsl:stylesheet\n  version=\"3.0\"\n  xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"\n  xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\n  xmlns:xlink=\"xmlns:xlink=http://www.w3.org/1999/xlink\"\n  xmlns:atom=\"http://www.w3.org/2005/Atom\"\n  xmlns:c=\"http://schema.highwire.org/Compound\"\n  xmlns=\"http://www.w3.org/1999/xhtml\"\n  exclude-result-prefixes=\"#all\">\n  \n  <xsl:import href=\"library.normalize.namespaces.xsl\"/>\n  \n  <xsl:variable name=\"base\" select=\"base-uri(.)\"/>\n  \n  <xsl:template match=\"/\">\n    <xsl:variable name=\"normalized\" as=\"element()\">\n      <xsl:call-template name=\"normalize.namespaces\"/>\n    </xsl:variable>\n    <xsl:variable name=\"atom-source-xml-uri\" as=\"xs:string?\"\n      select=\"\n        $normalized/atom:link\n            [@rel eq 'alternate']\n            [@c:role eq 'http://schema.highwire.org/variant/source']\n            [@type eq 'application/xml']\n            /@href\"/>\n    <!-- To Do: add options to always run on atom:entry, or on atom:content -->\n    <xsl:choose>\n      <xsl:when test=\"$atom-source-xml-uri\">\n        <xsl:apply-templates mode=\"xhtml\" select=\"doc(resolve-uri($atom-source-xml-uri,$base))/*\"/>\n      </xsl:when>\n      <xsl:otherwise>\n        <xsl:apply-templates/>\n      </xsl:otherwise>\n    </xsl:choose>\n  </xsl:template>\n  \n  <xsl:mode name=\"xhtml\" on-no-match=\"shallow-skip\" on-multiple-match=\"use-last\"/>\n  \n  <!-- To Do: add option to strip namespace prefix? -->\n  <xsl:template mode=\"xhtml\" match=\"*\">\n    <span class=\"{translate(name(.),':','-')}\">\n      <xsl:apply-templates mode=\"#current\" select=\"@*|node()\"/>\n    </span>\n  </xsl:template>\n  \n  <xsl:template mode=\"xhtml\" match=\"@*\">\n    <xsl:attribute name=\"data-{translate(name(.),':\\','-')}\" select=\".\"/>\n  </xsl:template>\n  \n  <xsl:template mode=\"xhtml\" match=\"@xlink:*\"/>\n  \n  <xsl:template mode=\"xhtml\" match=\"@xlink:href\">\n    <xsl:attribute name=\"href\" select=\".\"/>\n  </xsl:template>\n  \n  <xsl:template mode=\"xhtml\" match=\"@xml:lang\">\n    <xsl:sequence select=\".\"/>\n  </xsl:template>\n  \n  <xsl:template mode=\"xhtml\" match=\"@xml:base\">\n    <xsl:sequence select=\".\"/>\n  </xsl:template>\n  \n</xsl:stylesheet>",
"signature": "38bb1d978698587b47496c6eb4ec9cd0",
"mimeTypes": [
"application/xhtml+xml"
],
"newMimeType": null,
"corpusList": [
"freebird"
],
"newCorpus": null,
"updatedDate": 1492723928735,
"enable": false,
"ignorePaths": null,
"inclusionPaths": null,
"new": false,
"id": "ceb462f0-2610-11e7-9fe8-1195de1ee295"
}
]